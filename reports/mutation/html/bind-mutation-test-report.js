document.querySelector('mutation-test-report-app').report = {"files":{"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\App.js":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":2,"line":33},"start":{"column":16,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"}],"source":"import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\n\r\nimport standard from './styles/themes/standard';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport SignupScreen from './screens/SignupScreen';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport MapScreen from './screens/MapScreen';\r\nimport PeopleScreen from './screens/PeopleScreen';\r\nimport MainNav from './components/ui/nav/MainNav';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <MuiThemeProvider theme={standard}>\r\n        <Switch>\r\n\r\n          <Route path=\"/login\" component={LoginScreen} />\r\n          <Route path=\"/signup\" component={SignupScreen} />\r\n\r\n          <PrivateRoute path=\"/\" exact component={HomeScreen} />\r\n          <PrivateRoute path=\"/trickspot\" component={MapScreen} />\r\n          <PrivateRoute path=\"/people\" component={PeopleScreen} />\r\n\r\n        </Switch>\r\n        <MainNav />\r\n      </MuiThemeProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\account\\UserCard.js":{"language":"javascript","mutants":[{"id":"1","location":{"end":{"column":2,"line":64},"start":{"column":27,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"2","location":{"end":{"column":6,"line":19},"start":{"column":55,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"3","location":{"end":{"column":28,"line":16},"start":{"column":19,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"4","location":{"end":{"column":19,"line":18},"start":{"column":17,"line":18}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"5","location":{"end":{"column":6,"line":35},"start":{"column":21,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"7","location":{"end":{"column":36,"line":27},"start":{"column":17,"line":26}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"6","location":{"end":{"column":10,"line":26},"start":{"column":28,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"8","location":{"end":{"column":15,"line":33},"start":{"column":17,"line":28}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"9","location":{"end":{"column":14,"line":33},"start":{"column":31,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"11","location":{"end":{"column":28,"line":31},"start":{"column":25,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"10","location":{"end":{"column":52,"line":30},"start":{"column":27,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"12","location":{"end":{"column":24,"line":35},"start":{"column":8,"line":35}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import React, { useState, useEffect } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport UpdateStatusForm from '../ui/forms/UpdateStatusForm';\r\n\r\nimport spinner from '../../assets/img/ajax-loader.gif'\r\nimport UploadAvatarForm from '../ui/forms/UploadAvatarForm';\r\n\r\n\r\nconst UserCard = props => {\r\n    // Prop: requests; http client\r\n\r\n    const [userDetails, updateUserDetails] = useState({\r\n        username: 'Loading',\r\n        avatar: spinner,\r\n        status: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        // Get location, add to queryurl\r\n        props.requests.get(`\r\n            ${process.env.REACT_APP_ENDPOINT}\r\n            /Account/Details\r\n        `).then(data => \r\n            updateUserDetails(data)\r\n        ).catch(err =>\r\n            updateUserDetails({\r\n                username: 'Something went wrong D:',\r\n                avatar: '/',\r\n                status: err.message\r\n            })\r\n        );          \r\n    }, [props.requests])\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    userDetails.avatar ?\r\n                    <Avatar\r\n                        alt={userDetails.username}\r\n                        src={userDetails.avatar}\r\n                    />\r\n                    :\r\n                    <UploadAvatarForm requests={props.requests} />\r\n                }\r\n                // action={\r\n                //     <IconButton aria-label=\"settings\">\r\n                //         <MoreVertIcon />\r\n                //     </IconButton>\r\n                // }\r\n                title={userDetails.username}\r\n            />\r\n            <CardContent>\r\n                <UpdateStatusForm \r\n                    currentStatus={userDetails.status} \r\n                    requests={props.requests}\r\n                />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default UserCard;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\maps\\LeafletMap.js":{"language":"javascript","mutants":[{"id":"16","location":{"end":{"column":6,"line":37},"start":{"column":21,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"17","location":{"end":{"column":43,"line":24},"start":{"column":13,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"18","location":{"end":{"column":43,"line":24},"start":{"column":13,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"19","location":{"end":{"column":43,"line":24},"start":{"column":13,"line":24}},"mutatorName":"LogicalOperator","replacement":"props.location || props.radius","status":"Survived"},{"id":"20","location":{"end":{"column":10,"line":36},"start":{"column":45,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"13","location":{"end":{"column":2,"line":61},"start":{"column":29,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"21","location":{"end":{"column":14,"line":31},"start":{"column":32,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"15","location":{"end":{"column":10,"line":21},"start":{"column":8,"line":21}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"14","location":{"end":{"column":6,"line":21},"start":{"column":21,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"22","location":{"end":{"column":60,"line":32},"start":{"column":21,"line":31}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"23","location":{"end":{"column":64,"line":34},"start":{"column":21,"line":33}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"24","location":{"end":{"column":54,"line":37},"start":{"column":8,"line":37}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"27","location":{"end":{"column":14,"line":49},"start":{"column":20,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"25","location":{"end":{"column":52,"line":42},"start":{"column":34,"line":42}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"26","location":{"end":{"column":51,"line":42},"start":{"column":45,"line":42}},"mutatorName":"UnaryOperator","replacement":"+1.087","status":"Survived"},{"id":"30","location":{"end":{"column":37,"line":47},"start":{"column":27,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"31","location":{"end":{"column":27,"line":48},"start":{"column":25,"line":48}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"28","location":{"end":{"column":30,"line":45},"start":{"column":24,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"29","location":{"end":{"column":31,"line":46},"start":{"column":25,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React, { useEffect, useState, } from 'react';\r\nimport { Map, TileLayer, } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nimport setMarkerIcons from '../../utils/map/setMarkerIcons';\r\nimport MapMarker from './MapMarker';\r\nimport ErrorModal from '../ui/modals/ErrorModal';\r\n\r\n// https://stackoverflow.com/questions/42835692/react-leaflet-add-markers-dynamically\r\n// https://react-leaflet.js.org/docs/en/examples\r\n\r\nconst LeafletMap = props => {\r\n    // prop: location; array\r\n    // prop: radius; int\r\n    // prop: requests; http client\r\n\r\n    const [mapMarkers, setMapMarkers] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setMarkerIcons();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (props.location && props.radius) {\r\n            props.requests.get(`\r\n                ${process.env.REACT_APP_ENDPOINT}\r\n                /Mapmarker/Find\r\n                ?latitude=${props.location[0]}\r\n                &longitude=${props.location[1]}\r\n                &radius=${props.radius}\r\n            `).then(response => \r\n                setMapMarkers(response.data.map(MapMarker))\r\n            ).catch(e => \r\n                setMapMarkers(<ErrorModal error={e.message} />)\r\n            );\r\n        }\r\n    }, [props.location, props.radius, props.requests])\r\n\r\n    return (\r\n        <Map \r\n            center={props.location ? \r\n                props.location : [51.26829, -1.087]\r\n            }\r\n            style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                position: 'absolute',\r\n                zIndex: -1,\r\n            }}\r\n            zoom={14}\r\n        >\r\n            <TileLayer\r\n                url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n                //detectRetina={true}\r\n                maxZoom={19}\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            {mapMarkers}\r\n        </Map>\r\n    )\r\n}\r\n\r\nexport default LeafletMap;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\maps\\PopupContent.js":{"language":"javascript","mutants":[{"id":"33","location":{"end":{"column":2,"line":99},"start":{"column":31,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"35","location":{"end":{"column":6,"line":43},"start":{"column":44,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"34","location":{"end":{"column":7,"line":43},"start":{"column":34,"line":18}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"36","location":{"end":{"column":10,"line":22},"start":{"column":15,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"37","location":{"end":{"column":28,"line":20},"start":{"column":22,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"38","location":{"end":{"column":10,"line":26},"start":{"column":18,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"39","location":{"end":{"column":28,"line":24},"start":{"column":22,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"40","location":{"end":{"column":36,"line":25},"start":{"column":28,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"41","location":{"end":{"column":10,"line":29},"start":{"column":18,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"42","location":{"end":{"column":29,"line":28},"start":{"column":19,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"43","location":{"end":{"column":10,"line":32},"start":{"column":16,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"44","location":{"end":{"column":10,"line":38},"start":{"column":19,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"45","location":{"end":{"column":28,"line":34},"start":{"column":22,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"46","location":{"end":{"column":33,"line":35},"start":{"column":25,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"47","location":{"end":{"column":10,"line":42},"start":{"column":19,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"48","location":{"end":{"column":6,"line":52},"start":{"column":59,"line":48}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"49","location":{"end":{"column":24,"line":49},"start":{"column":15,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"50","location":{"end":{"column":25,"line":50},"start":{"column":23,"line":50}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"51","location":{"end":{"column":45,"line":51},"start":{"column":30,"line":51}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"52","location":{"end":{"column":6,"line":64},"start":{"column":21,"line":54}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"53","location":{"end":{"column":10,"line":59},"start":{"column":28,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"55","location":{"end":{"column":58,"line":62},"start":{"column":17,"line":61}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"54","location":{"end":{"column":38,"line":60},"start":{"column":17,"line":59}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"56","location":{"end":{"column":57,"line":62},"start":{"column":33,"line":62}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"57","location":{"end":{"column":40,"line":64},"start":{"column":8,"line":64}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"58","location":{"end":{"column":63,"line":77},"start":{"column":26,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"59","location":{"end":{"column":51,"line":82},"start":{"column":26,"line":82}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"60","location":{"end":{"column":51,"line":82},"start":{"column":26,"line":82}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"61","location":{"end":{"column":51,"line":82},"start":{"column":26,"line":82}},"mutatorName":"EqualityOperator","replacement":"theme.direction !== 'rtl'","status":"Killed"},{"id":"62","location":{"end":{"column":51,"line":82},"start":{"column":46,"line":82}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"63","location":{"end":{"column":51,"line":88},"start":{"column":26,"line":88}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"64","location":{"end":{"column":51,"line":88},"start":{"column":26,"line":88}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"65","location":{"end":{"column":51,"line":88},"start":{"column":26,"line":88}},"mutatorName":"EqualityOperator","replacement":"theme.direction !== 'rtl'","status":"Killed"},{"id":"66","location":{"end":{"column":51,"line":88},"start":{"column":46,"line":88}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\n\r\nimport spinner from '../../assets/img/ajax-loader.gif';\r\n\r\n\r\nconst PopupContent = props => {\r\n    // prop: markerId; int\r\n    // prop: requests; http client\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        card: {\r\n            display: 'flex',\r\n            minWidth: 301\r\n        },\r\n        details: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n        },\r\n        content: {\r\n            flex: '1 0 auto',\r\n        },\r\n        cover: {\r\n            width: 151,\r\n        },\r\n        controls: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            paddingLeft: theme.spacing(1),\r\n            paddingBottom: theme.spacing(1),\r\n        },\r\n        playIcon: {\r\n            height: 38,\r\n            width: 38,\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [markerDetails, updateMarkerDetails] = useState({\r\n        name: 'Loading',\r\n        locationType: '',\r\n        creator: <img style={{minWidth: 301}} src={spinner} alt='loading' />,\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.requests.get(`\r\n            ${process.env.REACT_APP_ENDPOINT}\r\n            /mapmarker/details?id=\r\n            ${props.markerId}\r\n        `).then(data => \r\n            updateMarkerDetails(data)\r\n        ).catch(e =>\r\n            updateMarkerDetails(m =>  m.name = e.message)    \r\n        );\r\n    }, [props.requests, props.markerId]);\r\n\r\n    return (\r\n        <div className={classes.card}>\r\n            <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        {markerDetails.name}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                        {markerDetails.locationType}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                        {`Created by ${markerDetails.creator}`}\r\n                    </Typography>\r\n                </CardContent>\r\n                <div className={classes.controls}>\r\n                    <IconButton aria-label=\"previous\">\r\n                        {theme.direction === 'rtl' ? <SkipNextIcon /> : <SkipPreviousIcon />}\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"play/pause\">\r\n                        <PlayArrowIcon className={classes.playIcon} />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"next\">\r\n                        {theme.direction === 'rtl' ? <SkipPreviousIcon /> : <SkipNextIcon />}\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <CardMedia\r\n                className={classes.cover}\r\n                image={spinner}\r\n                title=\"video\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopupContent;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\maps\\MapMarker.js":{"language":"javascript","mutants":[{"id":"32","location":{"end":{"column":2,"line":19},"start":{"column":28,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"}],"source":"import React from 'react';\r\nimport { Marker, Popup } from 'react-leaflet';\r\nimport axios from 'axios';\r\n\r\nimport PopupContent from './PopupContent';\r\n\r\n\r\nconst MapMarker = props => {\r\n    // prop: coords; array, latlng\r\n    // prop: id; int\r\n\r\n    return (\r\n        <Marker key={props.id} position={props.coords}>\r\n            <Popup >\r\n                <PopupContent markerId={props.id} requests={axios} />\r\n            </Popup>\r\n        </Marker>\r\n    )\r\n}\r\n\r\nexport default MapMarker;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\people\\ChatView.js":{"language":"javascript","mutants":[{"id":"67","location":{"end":{"column":2,"line":83},"start":{"column":27,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"68","location":{"end":{"column":53,"line":15},"start":{"column":51,"line":15}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"69","location":{"end":{"column":6,"line":18},"start":{"column":49,"line":16}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"70","location":{"end":{"column":6,"line":26},"start":{"column":21,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"71","location":{"end":{"column":67,"line":22},"start":{"column":22,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"72","location":{"end":{"column":10,"line":26},"start":{"column":8,"line":26}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"73","location":{"end":{"column":6,"line":44},"start":{"column":21,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"74","location":{"end":{"column":26,"line":29},"start":{"column":13,"line":29}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"75","location":{"end":{"column":26,"line":29},"start":{"column":13,"line":29}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"76","location":{"end":{"column":10,"line":43},"start":{"column":28,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"77","location":{"end":{"column":61,"line":31},"start":{"column":23,"line":31}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"78","location":{"end":{"column":60,"line":31},"start":{"column":41,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"79","location":{"end":{"column":19,"line":34},"start":{"column":24,"line":32}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"80","location":{"end":{"column":18,"line":34},"start":{"column":46,"line":32}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"81","location":{"end":{"column":46,"line":37},"start":{"column":30,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"82","location":{"end":{"column":14,"line":42},"start":{"column":57,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"83","location":{"end":{"column":18,"line":41},"start":{"column":32,"line":38}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"84","location":{"end":{"column":18,"line":41},"start":{"column":37,"line":38}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"85","location":{"end":{"column":23,"line":44},"start":{"column":8,"line":44}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"86","location":{"end":{"column":6,"line":54},"start":{"column":58,"line":46}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"87","location":{"end":{"column":34,"line":48},"start":{"column":21,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"88","location":{"end":{"column":15,"line":52},"start":{"column":20,"line":49}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"90","location":{"end":{"column":27,"line":53},"start":{"column":25,"line":53}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"89","location":{"end":{"column":14,"line":52},"start":{"column":42,"line":49}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"91","location":{"end":{"column":67,"line":70},"start":{"column":31,"line":70}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"92","location":{"end":{"column":78,"line":76},"start":{"column":30,"line":76}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React, { useState, useEffect } from 'react';\r\nimport * as signalR from '@aspnet/signalr';\r\nimport List from '@material-ui/core/List';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nimport MessageListItem from '../people/MessageListItem';\r\nimport spinner from '../../assets/img/ajax-loader.gif';\r\n\r\nconst ChatView = props => {\r\n    // Prop: interlocutor; string, person we're talking to\r\n\r\n    const [hubConnection, setHubConnection] = useState(null);\r\n    const [myMessage, updateMyMessage] = useState('');\r\n    const [messages, updateMessages] = useState([\r\n        <MessageListItem key={0} sender='' message='Loading' avatar={spinner} />\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setHubConnection(new signalR.HubConnectionBuilder()\r\n            .withUrl(`${process.env.REACT_APP_ENDPOINT}/hubs/chat`, { /*accessTokenFactory: getAccessToken()*/ })\r\n            .configureLogging(signalR.LogLevel.Information)\r\n            .build()\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (hubConnection) {\r\n            hubConnection.start()\r\n                .then(() => console.log('Connected to chat'))\r\n                .catch(err => updateMessages([\r\n                    <MessageListItem key={0} sender='Uh oh D:' message={err} avatar={ErrorOutlineIcon} />\r\n                ]));\r\n            \r\n            // Might need updating\r\n            hubConnection.on('ReceiveMessage', (req) => {\r\n                updateMessages(m => [\r\n                    ...m,\r\n                    MessageListItem(req)\r\n                ])\r\n            })\r\n        }\r\n    }, [hubConnection])\r\n\r\n    const sendMessage = async (interlocutor, message) => {\r\n        hubConnection\r\n            .invoke('SendMessage', interlocutor, message)\r\n            .catch(err => updateMessages([\r\n                ...messages,\r\n                <MessageListItem key={0} sender='Uh oh D:' message={err} avatar={ErrorOutlineIcon} />\r\n            ]));\r\n        updateMyMessage('');\r\n    }\r\n\r\n    return(\r\n        <div className='screen'>\r\n            <List>\r\n                {messages}\r\n            </List>\r\n            <form autoComplete=\"off\">\r\n                <TextField\r\n                    required\r\n                    id=\"outlined-dense-multiline\"\r\n                    label=\"Dense multiline\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    multiline\r\n                    rowsMax=\"20\"\r\n                    onChange={e => updateMyMessage(e.target.value)}\r\n                />\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    component=\"span\"\r\n                    onClick={() => sendMessage(props.interlocutor, myMessage)}\r\n                >\r\n                    Send\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatView"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\people\\MessageListItem.js":{"language":"javascript","mutants":[{"id":"94","location":{"end":{"column":7,"line":25},"start":{"column":34,"line":16}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"93","location":{"end":{"column":2,"line":55},"start":{"column":34,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"95","location":{"end":{"column":6,"line":25},"start":{"column":44,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"96","location":{"end":{"column":10,"line":21},"start":{"column":15,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"97","location":{"end":{"column":24,"line":18},"start":{"column":18,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"98","location":{"end":{"column":10,"line":24},"start":{"column":17,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"99","location":{"end":{"column":28,"line":23},"start":{"column":20,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst MessageListItem = props => {\r\n    // Prop: sender; string\r\n    // Prop: avatar; string, url src\r\n    // Prop: message; string\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n          width: '100%',\r\n          maxWidth: 360,\r\n          backgroundColor: theme.palette.background.paper,\r\n        },\r\n        inline: {\r\n          display: 'inline',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                <Avatar\r\n                    alt={props.sender}\r\n                    src={props.avatar}\r\n                    //imgProps={loading='lazy'}\r\n                />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                primary={props.sender}\r\n                secondary={\r\n                    <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes.inline}\r\n                        color=\"textPrimary\"\r\n                    >\r\n                        {props.message}\r\n                    </Typography>\r\n                }\r\n                />\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MessageListItem;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\people\\PeopleListing.js":{"language":"javascript","mutants":[{"id":"100","location":{"end":{"column":2,"line":66},"start":{"column":32,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"102","location":{"end":{"column":6,"line":20},"start":{"column":59,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"101","location":{"end":{"column":7,"line":20},"start":{"column":58,"line":14}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"103","location":{"end":{"column":31,"line":16},"start":{"column":19,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"104","location":{"end":{"column":16,"line":18},"start":{"column":14,"line":18}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"105","location":{"end":{"column":56,"line":21},"start":{"column":54,"line":21}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"107","location":{"end":{"column":6,"line":27},"start":{"column":36,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"106","location":{"end":{"column":51,"line":22},"start":{"column":46,"line":22}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"108","location":{"end":{"column":28,"line":25},"start":{"column":21,"line":25}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"110","location":{"end":{"column":39,"line":26},"start":{"column":25,"line":26}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"109","location":{"end":{"column":28,"line":25},"start":{"column":26,"line":25}},"mutatorName":"BooleanLiteral","replacement":"x","status":"Survived"},{"id":"111","location":{"end":{"column":39,"line":26},"start":{"column":25,"line":26}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"113","location":{"end":{"column":39,"line":26},"start":{"column":37,"line":26}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"112","location":{"end":{"column":39,"line":26},"start":{"column":25,"line":26}},"mutatorName":"LogicalOperator","replacement":"username && ''","status":"Survived"},{"id":"114","location":{"end":{"column":6,"line":49},"start":{"column":21,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"115","location":{"end":{"column":10,"line":37},"start":{"column":28,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"116","location":{"end":{"column":10,"line":40},"start":{"column":25,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"118","location":{"end":{"column":15,"line":47},"start":{"column":31,"line":41}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"117","location":{"end":{"column":16,"line":47},"start":{"column":18,"line":40}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"119","location":{"end":{"column":14,"line":47},"start":{"column":32,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"120","location":{"end":{"column":52,"line":43},"start":{"column":27,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"121","location":{"end":{"column":27,"line":44},"start":{"column":25,"line":44}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"122","location":{"end":{"column":40,"line":49},"start":{"column":8,"line":49}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"123","location":{"end":{"column":44,"line":56},"start":{"column":25,"line":56}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"124","location":{"end":{"column":45,"line":59},"start":{"column":26,"line":59}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"125","location":{"end":{"column":44,"line":60},"start":{"column":25,"line":60}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React, { useState, useEffect } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\n\r\nimport spinner from '../../assets/img/ajax-loader.gif';\r\nimport PersonListItem from '../../components/people/PersonListItem';\r\nimport ChatView from '../../components/people/ChatView';\r\n\r\n\r\nconst PeopleListing = props => {\r\n    // Prop: requests; http client\r\n    // Prop: location; latlong array\r\n\r\n    const [peopleListInfo, setPeopleListInfo] = useState([{\r\n        key: 0,\r\n        username: 'Loading...',\r\n        avatar: spinner,\r\n        bio: '',\r\n        chat: function(){}\r\n    }]);\r\n    const [interlocutor, setInterlocutor] = useState('');\r\n    const [chatting, setChatting] = useState(false);\r\n\r\n    const toggleChat = username => {\r\n        setChatting(x => !x)\r\n        setInterlocutor(username || '')\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Get location, add to queryurl\r\n        props.requests.get(`\r\n            ${process.env.REACT_APP_ENDPOINT}\r\n            /People/Find\r\n            ?latitude=${props.location[0]}\r\n            &longitude=${props.location[1]}\r\n            &radius=${50}\r\n        `).then(data => {\r\n            data.chat = toggleChat\r\n            setPeopleListInfo(data)\r\n        }).catch(err =>\r\n            setPeopleListInfo([{\r\n                key: 0,\r\n                username: 'Something went wrong D:',\r\n                avatar: '',\r\n                bio: err.message,\r\n                chat: function(){}\r\n            }])\r\n        );          \r\n    }, [props.requests, props.location])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <List>\r\n                {peopleListInfo.map(PersonListItem)}\r\n            </List>\r\n            <div style={{marginBottom: 100}}></div>\r\n            <SwipeableDrawer\r\n                open={chatting}\r\n                onClose={() => setChatting()}\r\n                onOpen={() => setChatting()}\r\n            >\r\n                <ChatView interlocutor={interlocutor} />\r\n            </SwipeableDrawer>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PeopleListing"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\people\\PersonListItem.js":{"language":"javascript","mutants":[{"id":"126","location":{"end":{"column":2,"line":48},"start":{"column":33,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"127","location":{"end":{"column":62,"line":42},"start":{"column":30,"line":42}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n\r\nconst PersonListItem = props => {\r\n    // Prop: username; string\r\n    // Prop: avatar; string, url src\r\n    // Prop: bio; string\r\n    // Prop: chat; function, takes username - opens ChatView\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                <Avatar\r\n                    alt={props.username}\r\n                    src={props.avatar}\r\n                    //imgProps={loading='lazy'}\r\n                />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                primary={props.username}\r\n                secondary={\r\n                    <Typography\r\n                        component=\"p\"\r\n                        variant=\"body2\"\r\n                        color=\"textPrimary\"\r\n                    >\r\n                        {props.bio}\r\n                    </Typography>\r\n                }\r\n                />\r\n                <ChatIcon\r\n                    color='primary'\r\n                    fontSize='large'\r\n                    onClick={() => props.chat(props.username)}\r\n                />\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default PersonListItem;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\routing\\PrivateRoute.js":{"language":"javascript","mutants":[{"id":"128","location":{"end":{"column":2,"line":17},"start":{"column":22,"line":8}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"129","location":{"end":{"column":4,"line":16},"start":{"column":28,"line":9}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"130","location":{"end":{"column":20,"line":10},"start":{"column":15,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"131","location":{"end":{"column":8,"line":15},"start":{"column":21,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"132","location":{"end":{"column":27,"line":13},"start":{"column":19,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"133","location":{"end":{"column":40,"line":14},"start":{"column":16,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport getCookie from '../../utils/browser/getCookie';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n    getCookie('jwt') ?\r\n      <Component {...props} /> :\r\n      <Redirect to={{\r\n        pathname: '/login',\r\n        state: { from: props.location }\r\n      }} />\r\n  )} />\r\n)\r\n\r\nexport default PrivateRoute"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\ui\\forms\\CreateMarkerForm.js":{"language":"javascript","mutants":[{"id":"134","location":{"end":{"column":2,"line":151},"start":{"column":35,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"135","location":{"end":{"column":6,"line":38},"start":{"column":21,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"136","location":{"end":{"column":10,"line":29},"start":{"column":28,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"137","location":{"end":{"column":10,"line":35},"start":{"column":25,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"138","location":{"end":{"column":52,"line":31},"start":{"column":38,"line":30}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"139","location":{"end":{"column":24,"line":38},"start":{"column":8,"line":38}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"140","location":{"end":{"column":6,"line":53},"start":{"column":49,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"141","location":{"end":{"column":55,"line":42},"start":{"column":23,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"142","location":{"end":{"column":40,"line":43},"start":{"column":21,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"143","location":{"end":{"column":63,"line":45},"start":{"column":23,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"144","location":{"end":{"column":41,"line":47},"start":{"column":23,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"145","location":{"end":{"column":27,"line":49},"start":{"column":17,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"146","location":{"end":{"column":43,"line":50},"start":{"column":17,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"147","location":{"end":{"column":58,"line":51},"start":{"column":17,"line":51}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"148","location":{"end":{"column":58,"line":51},"start":{"column":26,"line":51}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"149","location":{"end":{"column":58,"line":51},"start":{"column":26,"line":51}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"150","location":{"end":{"column":58,"line":51},"start":{"column":26,"line":51}},"mutatorName":"LogicalOperator","replacement":"value || value.size <= 262144000","status":"Survived"},{"id":"151","location":{"end":{"column":58,"line":51},"start":{"column":35,"line":51}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"152","location":{"end":{"column":58,"line":51},"start":{"column":35,"line":51}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"153","location":{"end":{"column":58,"line":51},"start":{"column":35,"line":51}},"mutatorName":"EqualityOperator","replacement":"value.size < 262144000","status":"Survived"},{"id":"154","location":{"end":{"column":58,"line":51},"start":{"column":35,"line":51}},"mutatorName":"EqualityOperator","replacement":"value.size > 262144000","status":"Survived"},{"id":"155","location":{"end":{"column":18,"line":66},"start":{"column":32,"line":61}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"156","location":{"end":{"column":36,"line":62},"start":{"column":34,"line":62}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"157","location":{"end":{"column":38,"line":63},"start":{"column":36,"line":63}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"158","location":{"end":{"column":18,"line":71},"start":{"column":58,"line":68}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"161","location":{"end":{"column":81,"line":99},"start":{"column":40,"line":99}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"159","location":{"end":{"column":39,"line":70},"start":{"column":35,"line":70}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"160","location":{"end":{"column":22,"line":147},"start":{"column":25,"line":73}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"163","location":{"end":{"column":81,"line":99},"start":{"column":40,"line":99}},"mutatorName":"LogicalOperator","replacement":"errors.marker_name || touched.marker_name","status":"Survived"},{"id":"162","location":{"end":{"column":81,"line":99},"start":{"column":40,"line":99}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"164","location":{"end":{"column":78,"line":101},"start":{"column":37,"line":101}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"165","location":{"end":{"column":78,"line":101},"start":{"column":37,"line":101}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"166","location":{"end":{"column":78,"line":101},"start":{"column":37,"line":101}},"mutatorName":"LogicalOperator","replacement":"errors.marker_name || touched.marker_name","status":"Survived"},{"id":"167","location":{"end":{"column":64,"line":102},"start":{"column":62,"line":102}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"168","location":{"end":{"column":82,"line":105},"start":{"column":65,"line":105}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"169","location":{"end":{"column":95,"line":109},"start":{"column":49,"line":109}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"170","location":{"end":{"column":72,"line":109},"start":{"column":57,"line":109}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"171","location":{"end":{"column":93,"line":109},"start":{"column":78,"line":109}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"172","location":{"end":{"column":59,"line":110},"start":{"column":44,"line":110}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"173","location":{"end":{"column":54,"line":121},"start":{"column":34,"line":117}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"174","location":{"end":{"column":54,"line":121},"start":{"column":34,"line":117}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"175","location":{"end":{"column":54,"line":121},"start":{"column":34,"line":117}},"mutatorName":"LogicalOperator","replacement":"errors.location_type && touched.location_type || <FormHelperText id=\"location_type_helper_text\" error={true}>\r\n                                        {errors.location_type}\r\n                                    </FormHelperText>","status":"Killed"},{"id":"176","location":{"end":{"column":58,"line":118},"start":{"column":34,"line":117}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"177","location":{"end":{"column":58,"line":118},"start":{"column":34,"line":117}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"179","location":{"end":{"column":95,"line":119},"start":{"column":91,"line":119}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"181","location":{"end":{"column":67,"line":142},"start":{"column":43,"line":142}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"180","location":{"end":{"column":61,"line":130},"start":{"column":59,"line":130}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"178","location":{"end":{"column":58,"line":118},"start":{"column":34,"line":117}},"mutatorName":"LogicalOperator","replacement":"errors.location_type || touched.location_type","status":"Survived"},{"id":"182","location":{"end":{"column":67,"line":142},"start":{"column":43,"line":142}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"183","location":{"end":{"column":67,"line":142},"start":{"column":43,"line":142}},"mutatorName":"LogicalOperator","replacement":"isSubmitting && !isValid","status":"Killed"},{"id":"184","location":{"end":{"column":67,"line":142},"start":{"column":59,"line":142}},"mutatorName":"BooleanLiteral","replacement":"isValid","status":"Killed"}],"source":"import React, { useState, useEffect } from 'react';\r\nimport { Formik, Field } from 'formik';\r\nimport *  as Yup from 'yup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport VideoInput from '../inputs/VideoInput';\r\nimport formStyles from '../../../styles/forms';\r\n\r\n\r\nconst CreateMarkerForm = props => {\r\n    // prop: location; array, latlng\r\n    // prop: requests; http client\r\n\r\n    const formClasses = formStyles()\r\n\r\n    const [locationTypes, updateLocationTypes] = useState(\r\n        <option>Loading...</option>\r\n    );\r\n\r\n    useEffect(() => {\r\n        props.requests.get(`\r\n            ${process.env.REACT_APP_ENDPOINT}\r\n            /mapmarker/locationTypes\r\n        `).then(data => {\r\n            const options = data.map((index, type) =>\r\n                <option key={index}>{type}</option>\r\n            );\r\n            options.unshift(<option key=\"blank\" ></option>)\r\n            updateLocationTypes(options);\r\n        }).catch( updateLocationTypes(\r\n                <option>Something went wrong D:</option>\r\n            ));\r\n    }, [props.requests]);\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        marker_name: Yup.string()\r\n            .required(\"Please give your marker a name\")\r\n            .min(3, \"min. 3 characters\"),\r\n        location_type: Yup.string()\r\n            .required(\"What kind of location are you marking?\"),\r\n        marker_video: Yup.mixed()\r\n            .required(\"We need a video!\")\r\n            .test(\r\n                \"fileSize\",\r\n                \"Your video is too big :(\",\r\n                value => value && value.size <= 262144000\r\n            )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h4 className={formClasses.embeddedFormHeader}>\r\n                Make your mark\r\n        </h4>\r\n            <Formik\r\n                initialValues={{\r\n                    marker_name: '',\r\n                    location_type: '',\r\n                    marker_video: null,\r\n                    location: props.location,\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    console.log(values);\r\n                    setSubmitting(true);\r\n                }}\r\n\r\n                render={({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    setFieldValue,\r\n                    handleBlur,\r\n                    isValid,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                }) => (\r\n                        <form\r\n                            onSubmit={handleSubmit}\r\n                            className={formClasses.form}\r\n                        >\r\n                            <FormHelperText>\r\n                                Mark this location on the map for others to see!<br />\r\n                                Include a video but please keep it under 10 seconds.\r\n                            </FormHelperText>\r\n                            <TextField\r\n                                name='marker_name'\r\n                                label='name'\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.marker_name}\r\n                                margin='normal'\r\n                                error={errors.marker_name && touched.marker_name}\r\n                                helperText={\r\n                                    errors.marker_name && touched.marker_name ?\r\n                                        errors.marker_name : ''\r\n                                }\r\n                            />\r\n                            <FormControl margin='normal' style={{ maxWidth: 200 }}>\r\n                                <InputLabel htmlFor=\"location_type\">Location Type</InputLabel>\r\n                                <Select\r\n                                    native\r\n                                    inputProps={{ name: 'location_type', id: 'location_type' }}\r\n                                    style={{ width: 200, }}\r\n                                    value={values.location_type}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                >\r\n                                    {locationTypes}\r\n                                </Select>\r\n                                {errors.location_type &&\r\n                                    touched.location_type &&\r\n                                    <FormHelperText id=\"location_type_helper_text\" error={true}>\r\n                                        {errors.location_type}\r\n                                    </FormHelperText>\r\n                                }\r\n                            </FormControl>\r\n                            <Field\r\n                                name=\"marker_video\"\r\n                                component={VideoInput}\r\n                                title=\"Upload\"\r\n                                setFieldValue={setFieldValue}\r\n                                errorMessage={errors.marker_video ?\r\n                                    errors.marker_video : ''\r\n                                }\r\n                                touched={touched.marker_video}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component=\"button\"\r\n                                type=\"submit\"\r\n                                margin='normal'\r\n                                className={formClasses.submit}\r\n                                disabled={isSubmitting || !isValid}\r\n                            >\r\n                                Create\r\n                    </Button>\r\n                        </form>\r\n                    )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateMarkerForm;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\ui\\forms\\LoginForm.js":{"language":"javascript","mutants":[{"id":"185","location":{"end":{"column":2,"line":108},"start":{"column":37,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"186","location":{"end":{"column":54,"line":14},"start":{"column":52,"line":14}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"187","location":{"end":{"column":6,"line":23},"start":{"column":49,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"188","location":{"end":{"column":56,"line":18},"start":{"column":20,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"189","location":{"end":{"column":56,"line":19},"start":{"column":23,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"190","location":{"end":{"column":40,"line":21},"start":{"column":21,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"191","location":{"end":{"column":51,"line":22},"start":{"column":23,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"192","location":{"end":{"column":59,"line":28},"start":{"column":32,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"193","location":{"end":{"column":43,"line":28},"start":{"column":41,"line":28}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"194","location":{"end":{"column":57,"line":28},"start":{"column":55,"line":28}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"197","location":{"end":{"column":74,"line":34},"start":{"column":25,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"195","location":{"end":{"column":18,"line":42},"start":{"column":58,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"196","location":{"end":{"column":39,"line":32},"start":{"column":35,"line":32}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"198","location":{"end":{"column":51,"line":37},"start":{"column":28,"line":36}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"199","location":{"end":{"column":51,"line":37},"start":{"column":48,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"200","location":{"end":{"column":22,"line":41},"start":{"column":36,"line":38}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"201","location":{"end":{"column":44,"line":39},"start":{"column":39,"line":39}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"202","location":{"end":{"column":22,"line":104},"start":{"column":25,"line":44}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"203","location":{"end":{"column":69,"line":66},"start":{"column":40,"line":66}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"204","location":{"end":{"column":69,"line":66},"start":{"column":40,"line":66}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"205","location":{"end":{"column":69,"line":66},"start":{"column":40,"line":66}},"mutatorName":"LogicalOperator","replacement":"errors.email || touched.email","status":"Survived"},{"id":"206","location":{"end":{"column":66,"line":68},"start":{"column":37,"line":68}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"207","location":{"end":{"column":66,"line":68},"start":{"column":37,"line":68}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"208","location":{"end":{"column":66,"line":68},"start":{"column":37,"line":68}},"mutatorName":"LogicalOperator","replacement":"errors.email || touched.email","status":"Survived"},{"id":"209","location":{"end":{"column":58,"line":69},"start":{"column":56,"line":69}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"210","location":{"end":{"column":75,"line":80},"start":{"column":40,"line":80}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"211","location":{"end":{"column":75,"line":80},"start":{"column":40,"line":80}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"212","location":{"end":{"column":75,"line":80},"start":{"column":40,"line":80}},"mutatorName":"LogicalOperator","replacement":"errors.password || touched.password","status":"Survived"},{"id":"213","location":{"end":{"column":72,"line":82},"start":{"column":37,"line":82}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"214","location":{"end":{"column":72,"line":82},"start":{"column":37,"line":82}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"215","location":{"end":{"column":72,"line":82},"start":{"column":37,"line":82}},"mutatorName":"LogicalOperator","replacement":"errors.password || touched.password","status":"Survived"},{"id":"216","location":{"end":{"column":61,"line":83},"start":{"column":59,"line":83}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"217","location":{"end":{"column":50,"line":87},"start":{"column":44,"line":87}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"218","location":{"end":{"column":44,"line":88},"start":{"column":40,"line":88}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"219","location":{"end":{"column":67,"line":99},"start":{"column":43,"line":99}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"220","location":{"end":{"column":67,"line":99},"start":{"column":43,"line":99}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"221","location":{"end":{"column":67,"line":99},"start":{"column":43,"line":99}},"mutatorName":"LogicalOperator","replacement":"isSubmitting && !isValid","status":"Killed"},{"id":"222","location":{"end":{"column":67,"line":99},"start":{"column":59,"line":99}},"mutatorName":"BooleanLiteral","replacement":"isValid","status":"Killed"}],"source":"import React, { useState, } from 'react';\r\nimport { Formik } from 'formik';\r\nimport *  as Yup from 'yup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport formStyles from '../../../styles/forms';\r\n\r\n\r\nconst LoginForm = ({ requests }) => {\r\n    const formClasses = formStyles();\r\n\r\n    const [submitError, setSubmitError] = useState('')\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .email(\"Please enter a valid email address\")\r\n            .required(\"Please enter your email address\"),\r\n        password: Yup.string()\r\n            .min(6, \"min. 6 characters\")\r\n            .required(\"Please enter your password\")\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{ email: '', password: '' }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    console.log(values)\r\n                    setSubmitting(true);\r\n                    requests.post(\r\n                        `${process.env.REACT_APP_ENDPOINT}/account/login`,\r\n                        values\r\n                    ).then(response =>\r\n                        window.location.href = \"/\"\r\n                    ).catch(err => {\r\n                        setSubmitting(false);\r\n                        setSubmitError(err.message);\r\n                    })\r\n                }}\r\n\r\n                render={({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    isValid,\r\n                }) => (\r\n                        <form\r\n                            onSubmit={handleSubmit}\r\n                            className={formClasses.form}\r\n                        >\r\n                            <TextField\r\n                                name='email'\r\n                                type='email'\r\n                                label='email'\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.email}\r\n                                margin='normal'\r\n                                error={errors.email && touched.email}\r\n                                helperText={\r\n                                    errors.email && touched.email ?\r\n                                        errors.email : ''\r\n                                }\r\n                            />\r\n                            <TextField\r\n                                name='password'\r\n                                type='password'\r\n                                label='password'\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.password}\r\n                                margin='normal'\r\n                                error={errors.password && touched.password}\r\n                                helperText={\r\n                                    errors.password && touched.password ?\r\n                                        errors.password : ''\r\n                                }\r\n                            />\r\n                            <FormHelperText\r\n                                component={'span'}\r\n                                error={true}\r\n                            >\r\n                                {submitError}\r\n                            </FormHelperText>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component=\"button\"\r\n                                className={formClasses.submit}\r\n                                type=\"submit\"\r\n                                margin='normal'\r\n                                disabled={isSubmitting || !isValid}\r\n                            >\r\n                                Log in\r\n                            </Button>\r\n                        </form>\r\n                    )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\ui\\forms\\SignupForm.js":{"language":"javascript","mutants":[{"id":"223","location":{"end":{"column":2,"line":169},"start":{"column":38,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"224","location":{"end":{"column":49,"line":15},"start":{"column":44,"line":15}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"225","location":{"end":{"column":6,"line":32},"start":{"column":49,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"226","location":{"end":{"column":56,"line":20},"start":{"column":20,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"229","location":{"end":{"column":36,"line":23},"start":{"column":29,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"227","location":{"end":{"column":56,"line":21},"start":{"column":23,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"228","location":{"end":{"column":44,"line":23},"start":{"column":20,"line":23}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"230","location":{"end":{"column":65,"line":23},"start":{"column":46,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"231","location":{"end":{"column":61,"line":25},"start":{"column":21,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"232","location":{"end":{"column":48,"line":26},"start":{"column":23,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"233","location":{"end":{"column":40,"line":28},"start":{"column":21,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"234","location":{"end":{"column":51,"line":29},"start":{"column":23,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"235","location":{"end":{"column":47,"line":31},"start":{"column":20,"line":31}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"236","location":{"end":{"column":39,"line":31},"start":{"column":29,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"238","location":{"end":{"column":18,"line":46},"start":{"column":32,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"237","location":{"end":{"column":71,"line":31},"start":{"column":49,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"239","location":{"end":{"column":30,"line":41},"start":{"column":28,"line":41}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"241","location":{"end":{"column":33,"line":43},"start":{"column":31,"line":43}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"240","location":{"end":{"column":38,"line":42},"start":{"column":36,"line":42}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"242","location":{"end":{"column":33,"line":44},"start":{"column":31,"line":44}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"243","location":{"end":{"column":41,"line":45},"start":{"column":39,"line":45}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"245","location":{"end":{"column":39,"line":49},"start":{"column":35,"line":49}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"244","location":{"end":{"column":18,"line":61},"start":{"column":58,"line":48}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"246","location":{"end":{"column":75,"line":51},"start":{"column":25,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"247","location":{"end":{"column":41,"line":54},"start":{"column":28,"line":53}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"248","location":{"end":{"column":40,"line":54},"start":{"column":36,"line":54}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"249","location":{"end":{"column":22,"line":58},"start":{"column":36,"line":55}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"251","location":{"end":{"column":22,"line":165},"start":{"column":25,"line":63}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"250","location":{"end":{"column":44,"line":57},"start":{"column":39,"line":57}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"252","location":{"end":{"column":69,"line":85},"start":{"column":40,"line":85}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"253","location":{"end":{"column":69,"line":85},"start":{"column":40,"line":85}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"254","location":{"end":{"column":69,"line":85},"start":{"column":40,"line":85}},"mutatorName":"LogicalOperator","replacement":"errors.email || touched.email","status":"Survived"},{"id":"255","location":{"end":{"column":66,"line":87},"start":{"column":37,"line":87}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"256","location":{"end":{"column":66,"line":87},"start":{"column":37,"line":87}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"257","location":{"end":{"column":66,"line":87},"start":{"column":37,"line":87}},"mutatorName":"LogicalOperator","replacement":"errors.email || touched.email","status":"Survived"},{"id":"258","location":{"end":{"column":58,"line":88},"start":{"column":56,"line":88}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"259","location":{"end":{"column":85,"line":99},"start":{"column":40,"line":99}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"261","location":{"end":{"column":85,"line":99},"start":{"column":40,"line":99}},"mutatorName":"LogicalOperator","replacement":"errors.confirm_email || touched.confirm_email","status":"Survived"},{"id":"260","location":{"end":{"column":85,"line":99},"start":{"column":40,"line":99}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"262","location":{"end":{"column":82,"line":101},"start":{"column":37,"line":101}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"263","location":{"end":{"column":82,"line":101},"start":{"column":37,"line":101}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"264","location":{"end":{"column":82,"line":101},"start":{"column":37,"line":101}},"mutatorName":"LogicalOperator","replacement":"errors.confirm_email || touched.confirm_email","status":"Survived"},{"id":"265","location":{"end":{"column":66,"line":102},"start":{"column":64,"line":102}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"266","location":{"end":{"column":75,"line":113},"start":{"column":40,"line":113}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"267","location":{"end":{"column":75,"line":113},"start":{"column":40,"line":113}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"268","location":{"end":{"column":75,"line":113},"start":{"column":40,"line":113}},"mutatorName":"LogicalOperator","replacement":"errors.username || touched.username","status":"Survived"},{"id":"269","location":{"end":{"column":72,"line":115},"start":{"column":37,"line":115}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"270","location":{"end":{"column":72,"line":115},"start":{"column":37,"line":115}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"271","location":{"end":{"column":72,"line":115},"start":{"column":37,"line":115}},"mutatorName":"LogicalOperator","replacement":"errors.username || touched.username","status":"Survived"},{"id":"272","location":{"end":{"column":61,"line":116},"start":{"column":59,"line":116}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"274","location":{"end":{"column":75,"line":127},"start":{"column":40,"line":127}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"273","location":{"end":{"column":75,"line":127},"start":{"column":40,"line":127}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"275","location":{"end":{"column":75,"line":127},"start":{"column":40,"line":127}},"mutatorName":"LogicalOperator","replacement":"errors.password || touched.password","status":"Survived"},{"id":"276","location":{"end":{"column":72,"line":129},"start":{"column":37,"line":129}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"277","location":{"end":{"column":72,"line":129},"start":{"column":37,"line":129}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"278","location":{"end":{"column":72,"line":129},"start":{"column":37,"line":129}},"mutatorName":"LogicalOperator","replacement":"errors.password || touched.password","status":"Survived"},{"id":"279","location":{"end":{"column":61,"line":130},"start":{"column":59,"line":130}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"280","location":{"end":{"column":91,"line":141},"start":{"column":40,"line":141}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"281","location":{"end":{"column":91,"line":141},"start":{"column":40,"line":141}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"282","location":{"end":{"column":91,"line":141},"start":{"column":40,"line":141}},"mutatorName":"LogicalOperator","replacement":"errors.confirm_password || touched.confirm_password","status":"Survived"},{"id":"283","location":{"end":{"column":88,"line":143},"start":{"column":37,"line":143}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"284","location":{"end":{"column":88,"line":143},"start":{"column":37,"line":143}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"285","location":{"end":{"column":88,"line":143},"start":{"column":37,"line":143}},"mutatorName":"LogicalOperator","replacement":"errors.confirm_password || touched.confirm_password","status":"Survived"},{"id":"286","location":{"end":{"column":69,"line":144},"start":{"column":67,"line":144}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"287","location":{"end":{"column":50,"line":148},"start":{"column":44,"line":148}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"288","location":{"end":{"column":44,"line":149},"start":{"column":40,"line":149}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"289","location":{"end":{"column":67,"line":160},"start":{"column":43,"line":160}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"290","location":{"end":{"column":67,"line":160},"start":{"column":43,"line":160}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"291","location":{"end":{"column":67,"line":160},"start":{"column":43,"line":160}},"mutatorName":"LogicalOperator","replacement":"isSubmitting && !isValid","status":"Killed"},{"id":"292","location":{"end":{"column":67,"line":160},"start":{"column":59,"line":160}},"mutatorName":"BooleanLiteral","replacement":"isValid","status":"Killed"}],"source":"import React, { useState, } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport formStyles from '../../../styles/forms';\r\nimport SuccessModal from '../modals/SuccessModal';\r\n\r\n\r\nconst SignupForm = ({ requests }) => {\r\n    const formClasses = formStyles();\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [submitError, setSubmitError] = useState(null);\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .email(\"Please enter a valid email address\")\r\n            .required(\"Please enter your email address\"),\r\n        confirm_email: Yup.string()\r\n            .oneOf([Yup.ref('email'), null], 'Emails must match'),\r\n        username: Yup.string()\r\n            .min(3, \"Username must be at least 3 characters\")\r\n            .required(\"Please enter a username\"),\r\n        password: Yup.string()\r\n            .min(6, \"min. 6 characters\")\r\n            .required(\"Please enter your password\"),\r\n        confirm_password: Yup.string()\r\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {success ? \r\n                <SuccessModal redirect='/' /> : null\r\n            }\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    confirm_email: '',\r\n                    username: '',\r\n                    password: '',\r\n                    confirm_password: '',\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    setSubmitting(true);\r\n                    requests.post(\r\n                        `${process.env.REACT_APP_ENDPOINT}/account/create`,\r\n                        values\r\n                    ).then(response =>\r\n                        setSuccess(true)\r\n                    ).catch(err => {\r\n                        setSubmitError(err.message);\r\n                        setSubmitting(false);\r\n                    }\r\n                    );\r\n\r\n                }}\r\n\r\n                render={({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    isValid,\r\n                }) => (\r\n                        <form\r\n                            onSubmit={handleSubmit}\r\n                            className={formClasses.form}\r\n                        >\r\n                            <TextField\r\n                                name='email'\r\n                                type='email'\r\n                                label='email'\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.email}\r\n                                margin='normal'\r\n                                error={errors.email && touched.email}\r\n                                helperText={\r\n                                    errors.email && touched.email ?\r\n                                        errors.email : ''\r\n                                }\r\n                            />\r\n                            <TextField\r\n                                name='confirm_email'\r\n                                type='email'\r\n                                label='confirm email'\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.confirm_email}\r\n                                margin='normal'\r\n                                error={errors.confirm_email && touched.confirm_email}\r\n                                helperText={\r\n                                    errors.confirm_email && touched.confirm_email ?\r\n                                        errors.confirm_email : ''\r\n                                }\r\n                            />\r\n                            <TextField\r\n                                name='username'\r\n                                label='username'\r\n                                type='username'\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.username}\r\n                                margin='normal'\r\n                                error={errors.username && touched.username}\r\n                                helperText={\r\n                                    errors.username && touched.username ?\r\n                                        errors.username : ''\r\n                                }\r\n                            />\r\n                            <TextField\r\n                                name='password'\r\n                                type='password'\r\n                                label='password'\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.password}\r\n                                margin='normal'\r\n                                error={errors.password && touched.password}\r\n                                helperText={\r\n                                    errors.password && touched.password ?\r\n                                        errors.password : ''\r\n                                }\r\n                            />\r\n                            <TextField\r\n                                name='confirm_password'\r\n                                type='password'\r\n                                label='confirm password'\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.confirm_password}\r\n                                margin='normal'\r\n                                error={errors.confirm_password && touched.confirm_password}\r\n                                helperText={\r\n                                    errors.confirm_password && touched.confirm_password ?\r\n                                        errors.confirm_password : ''\r\n                                }\r\n                            />\r\n                            <FormHelperText\r\n                                component={'span'}\r\n                                error={true}\r\n                            >\r\n                                {submitError}\r\n                            </FormHelperText>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component=\"button\"\r\n                                type=\"submit\"\r\n                                margin='normal'\r\n                                className={formClasses.submit}\r\n                                disabled={isSubmitting || !isValid}\r\n                            >\r\n                                Sign up\r\n                            </Button>\r\n                        </form>\r\n                    )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignupForm;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\ui\\forms\\UpdateEmailForm.js":{"language":"javascript","mutants":[{"id":"293","location":{"end":{"column":2,"line":93},"start":{"column":31,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"294","location":{"end":{"column":6,"line":19},"start":{"column":49,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"295","location":{"end":{"column":56,"line":15},"start":{"column":20,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"296","location":{"end":{"column":56,"line":16},"start":{"column":23,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"297","location":{"end":{"column":44,"line":18},"start":{"column":20,"line":18}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"298","location":{"end":{"column":36,"line":18},"start":{"column":29,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"299","location":{"end":{"column":65,"line":18},"start":{"column":46,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"300","location":{"end":{"column":14,"line":29},"start":{"column":28,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"301","location":{"end":{"column":26,"line":24},"start":{"column":24,"line":24}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"302","location":{"end":{"column":34,"line":25},"start":{"column":32,"line":25}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"303","location":{"end":{"column":29,"line":26},"start":{"column":27,"line":26}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"304","location":{"end":{"column":29,"line":27},"start":{"column":27,"line":27}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"306","location":{"end":{"column":14,"line":34},"start":{"column":53,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"305","location":{"end":{"column":37,"line":28},"start":{"column":35,"line":28}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"308","location":{"end":{"column":14,"line":90},"start":{"column":21,"line":36}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"307","location":{"end":{"column":35,"line":33},"start":{"column":31,"line":33}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"309","location":{"end":{"column":61,"line":58},"start":{"column":32,"line":58}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"310","location":{"end":{"column":61,"line":58},"start":{"column":32,"line":58}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"311","location":{"end":{"column":61,"line":58},"start":{"column":32,"line":58}},"mutatorName":"LogicalOperator","replacement":"errors.email || touched.email","status":"Survived"},{"id":"312","location":{"end":{"column":58,"line":60},"start":{"column":29,"line":60}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"313","location":{"end":{"column":58,"line":60},"start":{"column":29,"line":60}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"314","location":{"end":{"column":58,"line":60},"start":{"column":29,"line":60}},"mutatorName":"LogicalOperator","replacement":"errors.email || touched.email","status":"Survived"},{"id":"315","location":{"end":{"column":46,"line":61},"start":{"column":44,"line":61}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"316","location":{"end":{"column":77,"line":72},"start":{"column":32,"line":72}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"317","location":{"end":{"column":77,"line":72},"start":{"column":32,"line":72}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"318","location":{"end":{"column":77,"line":72},"start":{"column":32,"line":72}},"mutatorName":"LogicalOperator","replacement":"errors.confirm_email || touched.confirm_email","status":"Survived"},{"id":"319","location":{"end":{"column":74,"line":74},"start":{"column":29,"line":74}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"320","location":{"end":{"column":74,"line":74},"start":{"column":29,"line":74}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"322","location":{"end":{"column":54,"line":75},"start":{"column":52,"line":75}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"321","location":{"end":{"column":74,"line":74},"start":{"column":29,"line":74}},"mutatorName":"LogicalOperator","replacement":"errors.confirm_email || touched.confirm_email","status":"Survived"},{"id":"323","location":{"end":{"column":59,"line":85},"start":{"column":35,"line":85}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"324","location":{"end":{"column":59,"line":85},"start":{"column":35,"line":85}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"325","location":{"end":{"column":59,"line":85},"start":{"column":35,"line":85}},"mutatorName":"LogicalOperator","replacement":"isSubmitting && !isValid","status":"Killed"},{"id":"326","location":{"end":{"column":59,"line":85},"start":{"column":51,"line":85}},"mutatorName":"BooleanLiteral","replacement":"isValid","status":"Killed"}],"source":"import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport formStyles from '../../../styles/forms';\r\n\r\n\r\nconst UpdateEmailForm = () => {\r\n    const formClasses = formStyles();\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .email(\"Please enter a valid email address\")\r\n            .required(\"Please enter your email address\"),\r\n        confirm_email: Yup.string()\r\n            .oneOf([Yup.ref('email'), null], 'Emails must match'),\r\n    })\r\n    \r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                confirm_email: '',\r\n                username: '',\r\n                password: '',\r\n                confirm_password: '',\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, { setSubmitting }) =>{\r\n                console.log(values)\r\n                setSubmitting(true);\r\n            }}\r\n            \r\n            render={({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                isValid,\r\n            }) => (\r\n                <form\r\n                    onSubmit={handleSubmit}\r\n                    className={formClasses.form}\r\n                >\r\n                    <TextField\r\n                        name='email'\r\n                        type='email'\r\n                        label='email'\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.email}\r\n                        margin='normal'\r\n                        error={errors.email && touched.email}\r\n                        helperText={\r\n                            errors.email && touched.email ?\r\n                            errors.email : ''\r\n                        }\r\n                    />\r\n                    <TextField\r\n                        name='confirm_email'\r\n                        type='email'\r\n                        label='confirm email'\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.confirm_email}\r\n                        margin='normal'\r\n                        error={errors.confirm_email && touched.confirm_email}\r\n                        helperText={\r\n                            errors.confirm_email && touched.confirm_email ?\r\n                            errors.confirm_email : ''\r\n                        }\r\n                    />\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        component=\"button\"\r\n                        type=\"submit\"\r\n                        margin='normal'\r\n                        className={formClasses.submit}\r\n                        disabled={isSubmitting || !isValid}\r\n                    >\r\n                        Update Email\r\n                    </Button>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UpdateEmailForm;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\ui\\forms\\UpdatePasswordForm.js":{"language":"javascript","mutants":[{"id":"327","location":{"end":{"column":2,"line":93},"start":{"column":34,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"328","location":{"end":{"column":6,"line":19},"start":{"column":49,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"329","location":{"end":{"column":40,"line":15},"start":{"column":21,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"330","location":{"end":{"column":51,"line":16},"start":{"column":23,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"333","location":{"end":{"column":71,"line":18},"start":{"column":49,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"334","location":{"end":{"column":14,"line":29},"start":{"column":28,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"332","location":{"end":{"column":39,"line":18},"start":{"column":29,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"331","location":{"end":{"column":47,"line":18},"start":{"column":20,"line":18}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"335","location":{"end":{"column":26,"line":24},"start":{"column":24,"line":24}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"337","location":{"end":{"column":29,"line":26},"start":{"column":27,"line":26}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"340","location":{"end":{"column":14,"line":34},"start":{"column":53,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"341","location":{"end":{"column":35,"line":33},"start":{"column":31,"line":33}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"342","location":{"end":{"column":14,"line":90},"start":{"column":21,"line":36}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"343","location":{"end":{"column":67,"line":58},"start":{"column":32,"line":58}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"344","location":{"end":{"column":67,"line":58},"start":{"column":32,"line":58}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"336","location":{"end":{"column":34,"line":25},"start":{"column":32,"line":25}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"338","location":{"end":{"column":29,"line":27},"start":{"column":27,"line":27}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"339","location":{"end":{"column":37,"line":28},"start":{"column":35,"line":28}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"345","location":{"end":{"column":67,"line":58},"start":{"column":32,"line":58}},"mutatorName":"LogicalOperator","replacement":"errors.password || touched.password","status":"Survived"},{"id":"346","location":{"end":{"column":64,"line":60},"start":{"column":29,"line":60}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"347","location":{"end":{"column":64,"line":60},"start":{"column":29,"line":60}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"348","location":{"end":{"column":64,"line":60},"start":{"column":29,"line":60}},"mutatorName":"LogicalOperator","replacement":"errors.password || touched.password","status":"Survived"},{"id":"351","location":{"end":{"column":83,"line":72},"start":{"column":32,"line":72}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"350","location":{"end":{"column":83,"line":72},"start":{"column":32,"line":72}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"349","location":{"end":{"column":49,"line":61},"start":{"column":47,"line":61}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"352","location":{"end":{"column":83,"line":72},"start":{"column":32,"line":72}},"mutatorName":"LogicalOperator","replacement":"errors.confirm_password || touched.confirm_password","status":"Survived"},{"id":"353","location":{"end":{"column":80,"line":74},"start":{"column":29,"line":74}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"354","location":{"end":{"column":80,"line":74},"start":{"column":29,"line":74}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"355","location":{"end":{"column":80,"line":74},"start":{"column":29,"line":74}},"mutatorName":"LogicalOperator","replacement":"errors.confirm_password || touched.confirm_password","status":"Survived"},{"id":"357","location":{"end":{"column":59,"line":85},"start":{"column":35,"line":85}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"356","location":{"end":{"column":57,"line":75},"start":{"column":55,"line":75}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"359","location":{"end":{"column":59,"line":85},"start":{"column":35,"line":85}},"mutatorName":"LogicalOperator","replacement":"isSubmitting && !isValid","status":"Killed"},{"id":"358","location":{"end":{"column":59,"line":85},"start":{"column":35,"line":85}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"360","location":{"end":{"column":59,"line":85},"start":{"column":51,"line":85}},"mutatorName":"BooleanLiteral","replacement":"isValid","status":"Killed"}],"source":"import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport formStyles from '../../../styles/forms';\r\n\r\n\r\nconst UpdatePasswordForm = () => {\r\n    const formClasses = formStyles();\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        password: Yup.string()\r\n            .min(6, \"min. 6 characters\")\r\n            .required(\"Please enter your password\"),\r\n        confirm_password: Yup.string()\r\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n    })\r\n    \r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                confirm_email: '',\r\n                username: '',\r\n                password: '',\r\n                confirm_password: '',\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, { setSubmitting }) =>{\r\n                console.log(values)\r\n                setSubmitting(true);\r\n            }}\r\n        \r\n            render={({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                isValid,\r\n            }) => (\r\n                <form\r\n                    onSubmit={handleSubmit}\r\n                    className={formClasses.form}\r\n                >\r\n                    <TextField\r\n                        name='password'\r\n                        type='password'\r\n                        label='password'\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.password}\r\n                        margin='normal'\r\n                        error={errors.password && touched.password}\r\n                        helperText={\r\n                            errors.password && touched.password ?\r\n                            errors.password : ''\r\n                        }\r\n                    />\r\n                    <TextField\r\n                        name='confirm_password'\r\n                        type='password'\r\n                        label='confirm password'\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.confirm_password}\r\n                        margin='normal'\r\n                        error={errors.confirm_password && touched.confirm_password}\r\n                        helperText={\r\n                            errors.confirm_password && touched.confirm_password ?\r\n                            errors.confirm_password : ''\r\n                        }\r\n                    />\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        component=\"button\"\r\n                        type=\"submit\"\r\n                        margin='normal'\r\n                        className={formClasses.submit}\r\n                        disabled={isSubmitting || !isValid}\r\n                    >\r\n                        Update Password\r\n                    </Button>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UpdatePasswordForm;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\ui\\forms\\UpdateStatusForm.js":{"language":"javascript","mutants":[{"id":"361","location":{"end":{"column":2,"line":87},"start":{"column":35,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"362","location":{"end":{"column":54,"line":15},"start":{"column":52,"line":15}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"363","location":{"end":{"column":84,"line":21},"start":{"column":32,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"364","location":{"end":{"column":81,"line":21},"start":{"column":42,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"365","location":{"end":{"column":81,"line":21},"start":{"column":42,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"367","location":{"end":{"column":81,"line":21},"start":{"column":65,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"366","location":{"end":{"column":81,"line":21},"start":{"column":42,"line":21}},"mutatorName":"LogicalOperator","replacement":"props.currentStatus && 'Whatcha sayin?'","status":"Killed"},{"id":"369","location":{"end":{"column":39,"line":24},"start":{"column":35,"line":24}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"368","location":{"end":{"column":18,"line":34},"start":{"column":58,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"370","location":{"end":{"column":75,"line":26},"start":{"column":25,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"371","location":{"end":{"column":45,"line":29},"start":{"column":28,"line":28}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"373","location":{"end":{"column":22,"line":33},"start":{"column":36,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"372","location":{"end":{"column":44,"line":29},"start":{"column":39,"line":29}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"374","location":{"end":{"column":44,"line":31},"start":{"column":39,"line":31}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"375","location":{"end":{"column":22,"line":83},"start":{"column":25,"line":36}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"376","location":{"end":{"column":71,"line":59},"start":{"column":40,"line":59}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"377","location":{"end":{"column":71,"line":59},"start":{"column":40,"line":59}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"378","location":{"end":{"column":71,"line":59},"start":{"column":40,"line":59}},"mutatorName":"LogicalOperator","replacement":"errors.status || touched.status","status":"Survived"},{"id":"379","location":{"end":{"column":68,"line":61},"start":{"column":37,"line":61}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"380","location":{"end":{"column":68,"line":61},"start":{"column":37,"line":61}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"381","location":{"end":{"column":68,"line":61},"start":{"column":37,"line":61}},"mutatorName":"LogicalOperator","replacement":"errors.status || touched.status","status":"Survived"},{"id":"382","location":{"end":{"column":59,"line":62},"start":{"column":57,"line":62}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"383","location":{"end":{"column":50,"line":66},"start":{"column":44,"line":66}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"384","location":{"end":{"column":44,"line":67},"start":{"column":40,"line":67}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"}],"source":"import React, { useState, } from 'react';\r\nimport { Formik } from 'formik';\r\nimport *  as Yup from 'yup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport formStyles from '../../../styles/forms';\r\n\r\n\r\nconst UpdateStatusForm = props => {\r\n    // Prop: requests; http client\r\n    // Prop: currentStatus; string\r\n\r\n    const [submitError, setSubmitError] = useState('')\r\n\r\n    const formClasses = formStyles();\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{ status: props.currentStatus || 'Whatcha sayin?', }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    console.log(values)\r\n                    setSubmitting(true);\r\n                    props.requests.post(\r\n                        `${process.env.REACT_APP_ENDPOINT}/account/status`,\r\n                        values\r\n                    ).then(response =>\r\n                        setSubmitting(false)\r\n                    ).catch(err => {\r\n                        setSubmitting(false);\r\n                        setSubmitError(err.message);\r\n                    })\r\n                }}\r\n\r\n                render={({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    isValid,\r\n                }) => (\r\n                        <form\r\n                            onSubmit={handleSubmit}\r\n                            className={formClasses.textFieldForm}\r\n                        >\r\n                            <TextField\r\n                                name='status'\r\n                                label='status'\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.status}\r\n                                margin='normal'\r\n                                multiline\r\n                                rows=\"4\"\r\n                                error={errors.status && touched.status}\r\n                                helperText={\r\n                                    errors.status && touched.status ?\r\n                                        errors.status : ''\r\n                                }\r\n                            />\r\n                            <FormHelperText\r\n                                component={'span'}\r\n                                error={true}\r\n                            >\r\n                                {submitError}\r\n                            </FormHelperText>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                component=\"button\"\r\n                                className={formClasses.pullRight}\r\n                                type=\"submit\"\r\n                                margin='normal'\r\n                                disabled={isSubmitting}\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </form>\r\n                    )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateStatusForm;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\ui\\forms\\UploadAvatarForm.js":{"language":"javascript","mutants":[{"id":"385","location":{"end":{"column":2,"line":100},"start":{"column":44,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"386","location":{"end":{"column":6,"line":29},"start":{"column":49,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"387","location":{"end":{"column":47,"line":18},"start":{"column":23,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"388","location":{"end":{"column":27,"line":20},"start":{"column":17,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"389","location":{"end":{"column":43,"line":21},"start":{"column":17,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"390","location":{"end":{"column":49,"line":22},"start":{"column":17,"line":22}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"392","location":{"end":{"column":49,"line":22},"start":{"column":26,"line":22}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"391","location":{"end":{"column":49,"line":22},"start":{"column":26,"line":22}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"393","location":{"end":{"column":49,"line":22},"start":{"column":26,"line":22}},"mutatorName":"EqualityOperator","replacement":"value.size < 104857600","status":"Survived"},{"id":"394","location":{"end":{"column":49,"line":22},"start":{"column":26,"line":22}},"mutatorName":"EqualityOperator","replacement":"value.size > 104857600","status":"Survived"},{"id":"395","location":{"end":{"column":27,"line":25},"start":{"column":17,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"396","location":{"end":{"column":42,"line":26},"start":{"column":17,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"397","location":{"end":{"column":83,"line":27},"start":{"column":17,"line":27}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"398","location":{"end":{"column":83,"line":27},"start":{"column":26,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"399","location":{"end":{"column":83,"line":27},"start":{"column":26,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"400","location":{"end":{"column":83,"line":27},"start":{"column":26,"line":27}},"mutatorName":"LogicalOperator","replacement":"value.type === 'image/jpeg' && value.type === 'image/png'","status":"Survived"},{"id":"401","location":{"end":{"column":53,"line":27},"start":{"column":26,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"402","location":{"end":{"column":53,"line":27},"start":{"column":26,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"403","location":{"end":{"column":53,"line":27},"start":{"column":26,"line":27}},"mutatorName":"EqualityOperator","replacement":"value.type !== 'image/jpeg'","status":"Survived"},{"id":"404","location":{"end":{"column":53,"line":27},"start":{"column":41,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"405","location":{"end":{"column":83,"line":27},"start":{"column":57,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"406","location":{"end":{"column":83,"line":27},"start":{"column":57,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"408","location":{"end":{"column":83,"line":27},"start":{"column":72,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"407","location":{"end":{"column":83,"line":27},"start":{"column":57,"line":27}},"mutatorName":"EqualityOperator","replacement":"value.type !== 'image/png'","status":"Survived"},{"id":"409","location":{"end":{"column":14,"line":36},"start":{"column":28,"line":34}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"410","location":{"end":{"column":14,"line":47},"start":{"column":54,"line":38}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"411","location":{"end":{"column":35,"line":39},"start":{"column":31,"line":39}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"412","location":{"end":{"column":77,"line":41},"start":{"column":21,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"415","location":{"end":{"column":18,"line":97},"start":{"column":21,"line":49}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"413","location":{"end":{"column":18,"line":46},"start":{"column":32,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"414","location":{"end":{"column":40,"line":45},"start":{"column":35,"line":45}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"417","location":{"end":{"column":67,"line":81},"start":{"column":43,"line":81}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"416","location":{"end":{"column":57,"line":70},"start":{"column":55,"line":70}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"418","location":{"end":{"column":67,"line":81},"start":{"column":43,"line":81}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"419","location":{"end":{"column":67,"line":81},"start":{"column":43,"line":81}},"mutatorName":"LogicalOperator","replacement":"isSubmitting && !isValid","status":"Survived"},{"id":"420","location":{"end":{"column":67,"line":81},"start":{"column":59,"line":81}},"mutatorName":"BooleanLiteral","replacement":"isValid","status":"Survived"},{"id":"421","location":{"end":{"column":29,"line":85},"start":{"column":27,"line":85}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"422","location":{"end":{"column":54,"line":89},"start":{"column":48,"line":89}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"423","location":{"end":{"column":48,"line":90},"start":{"column":44,"line":90}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"424","location":{"end":{"column":29,"line":94},"start":{"column":27,"line":94}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"}],"source":"import React, { useState } from 'react';\r\nimport { Formik, Field } from 'formik';\r\nimport *  as Yup from 'yup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport formStyles from '../../../styles/forms';\r\nimport ImageInput from '../inputs/ImageInput';\r\n\r\n\r\nconst UploadAvatarForm = ({ requests }) => {\r\n    // prop: requests; http client\r\n\r\n    const [submitError, setSubmitError] = useState(null);\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        avatar: Yup.mixed()\r\n            .required(\"Please select an image\")\r\n            .test(\r\n                \"fileSize\",\r\n                \"Your image is too big :(\",\r\n                value => value.size <= 104857600\r\n            )\r\n            .test(\r\n                \"fileType\",\r\n                \"png or jpeg only please\",\r\n                value => value.type === 'image/jpeg' || value.type === 'image/png'\r\n            )\r\n    })\r\n\r\n    const formClasses = formStyles()\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                avatar: null,\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setSubmitting(true);\r\n                requests.post(\r\n                    `${process.env.REACT_APP_ENDPOINT}/account/updateavatar`,\r\n                    values\r\n                ).catch(err => {\r\n                    setSubmitError(err.message);\r\n                    setSubmitting(false);\r\n                })\r\n            }}\r\n\r\n            render={({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                setFieldValue,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                isValid,\r\n            }) => (\r\n                    <form\r\n                        onSubmit={handleSubmit}\r\n                        className={formClasses.form}\r\n                    >\r\n                        <Field\r\n                            name=\"avatar\"\r\n                            component={ImageInput}\r\n                            title=\"Avatar\"\r\n                            setFieldValue={setFieldValue}\r\n                            errorMessage={errors.marker_video ?\r\n                                errors.marker_video : ''\r\n                            }\r\n                            touched={touched.marker_video}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                        {values.avatar ? \r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component=\"button\"\r\n                                type=\"submit\"\r\n                                disabled={isSubmitting || !isValid}\r\n                            >\r\n                                Upload\r\n                            </Button>\r\n                        : ''\r\n                        }\r\n                        {submitError ?\r\n                            <FormHelperText\r\n                                    component={'span'}\r\n                                    error={true}\r\n                                >\r\n                                    {submitError}\r\n                            </FormHelperText>\r\n                        : ''\r\n                        }\r\n                    </form>\r\n                )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UploadAvatarForm;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\ui\\inputs\\ImageInput.js":{"language":"javascript","mutants":[{"id":"425","location":{"end":{"column":2,"line":53},"start":{"column":29,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"426","location":{"end":{"column":48,"line":9},"start":{"column":46,"line":9}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"427","location":{"end":{"column":6,"line":20},"start":{"column":36,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"428","location":{"end":{"column":17,"line":15},"start":{"column":13,"line":15}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"431","location":{"end":{"column":60,"line":16},"start":{"column":32,"line":16}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"430","location":{"end":{"column":10,"line":19},"start":{"column":19,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"429","location":{"end":{"column":17,"line":15},"start":{"column":13,"line":15}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"433","location":{"end":{"column":41,"line":25},"start":{"column":35,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"432","location":{"end":{"column":43,"line":25},"start":{"column":24,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"434","location":{"end":{"column":74,"line":47},"start":{"column":70,"line":47}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"}],"source":"import React, { useState } from \"react\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nconst ImageInput = props => {\r\n    const [fileName, setFileName] = useState('');\r\n\r\n    const handleVideoChange = e => {\r\n        e.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n        if (file) {\r\n            reader.onloadend = () => setFileName(file.name);\r\n            reader.readAsDataURL(file);\r\n            props.setFieldValue(props.field.name, file);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormControl>\r\n            <input\r\n                style={{ display: \"none\" }}\r\n                id='image-upload'\r\n                name={props.field.name}\r\n                type=\"file\"\r\n                accept=\"image/png,image/jpeg\"\r\n                onChange={handleVideoChange}\r\n            />\r\n            <label htmlFor=\"image-upload\">\r\n                <Button\r\n                    color='primary'\r\n                    component=\"span\"\r\n                >\r\n                    {props.title}\r\n                    <InsertPhotoIcon />\r\n                </Button>\r\n            </label>\r\n            {fileName ? (\r\n                <FormHelperText id=\"image-upload-filename\">\r\n                    {fileName}\r\n                </FormHelperText>\r\n            ) : null}\r\n            {props.errorMessage ? (\r\n                <FormHelperText id=\"image-upload-helper-text\" error={true}>\r\n                    {props.errorMessage}\r\n                </FormHelperText>\r\n            ) : null} \r\n        </FormControl>\r\n    );\r\n}\r\n\r\n\r\nexport default ImageInput;\r\n"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\ui\\inputs\\VideoInput.js":{"language":"javascript","mutants":[{"id":"435","location":{"end":{"column":2,"line":54},"start":{"column":29,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"436","location":{"end":{"column":48,"line":9},"start":{"column":46,"line":9}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"437","location":{"end":{"column":6,"line":20},"start":{"column":36,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"438","location":{"end":{"column":17,"line":15},"start":{"column":13,"line":15}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"440","location":{"end":{"column":10,"line":19},"start":{"column":19,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"439","location":{"end":{"column":17,"line":15},"start":{"column":13,"line":15}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"441","location":{"end":{"column":60,"line":16},"start":{"column":32,"line":16}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"442","location":{"end":{"column":43,"line":25},"start":{"column":24,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"443","location":{"end":{"column":41,"line":25},"start":{"column":35,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"444","location":{"end":{"column":74,"line":48},"start":{"column":70,"line":48}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"}],"source":"import React, { useState } from \"react\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport VideoLibraryOutlinedIcon from '@material-ui/icons/VideoLibraryOutlined';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nconst VideoInput = props => {\r\n    const [fileName, setFileName] = useState('');\r\n\r\n    const handleVideoChange = e => {\r\n        e.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n        if (file) {\r\n            reader.onloadend = () => setFileName(file.name);\r\n            reader.readAsDataURL(file);\r\n            props.setFieldValue(props.field.name, file);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormControl margin='normal'>\r\n            <input\r\n                style={{ display: \"none\" }}\r\n                id='video-upload'\r\n                name={props.field.name}\r\n                type=\"file\"\r\n                accept=\"video/*\"\r\n                onChange={handleVideoChange}\r\n            />\r\n            <label htmlFor=\"video-upload\">\r\n                <Button\r\n                    color='primary'\r\n                    margin='normal'\r\n                    component=\"span\"\r\n                >\r\n                    {props.title}\r\n                    <VideoLibraryOutlinedIcon />\r\n                </Button>\r\n            </label>\r\n            {fileName ? (\r\n                <FormHelperText id=\"video-upload-filename\">\r\n                    {fileName}\r\n                </FormHelperText>\r\n            ) : null}\r\n            {props.errorMessage ? (\r\n                <FormHelperText id=\"video-upload-helper-text\" error={true}>\r\n                    {props.errorMessage}\r\n                </FormHelperText>\r\n            ) : null} \r\n        </FormControl>\r\n    );\r\n}\r\n\r\n\r\nexport default VideoInput;\r\n"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\ui\\modals\\ErrorModal.js":{"language":"javascript","mutants":[{"id":"445","location":{"end":{"column":2,"line":58},"start":{"column":29,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"446","location":{"end":{"column":52,"line":10},"start":{"column":48,"line":10}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"447","location":{"end":{"column":7,"line":30},"start":{"column":34,"line":12}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"448","location":{"end":{"column":6,"line":30},"start":{"column":44,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"449","location":{"end":{"column":10,"line":18},"start":{"column":16,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"450","location":{"end":{"column":28,"line":14},"start":{"column":22,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"451","location":{"end":{"column":37,"line":15},"start":{"column":29,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"452","location":{"end":{"column":33,"line":16},"start":{"column":25,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"453","location":{"end":{"column":31,"line":17},"start":{"column":24,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"454","location":{"end":{"column":10,"line":29},"start":{"column":18,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"455","location":{"end":{"column":28,"line":20},"start":{"column":22,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"456","location":{"end":{"column":36,"line":21},"start":{"column":28,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"457","location":{"end":{"column":37,"line":22},"start":{"column":29,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"458","location":{"end":{"column":33,"line":23},"start":{"column":25,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"459","location":{"end":{"column":25,"line":24},"start":{"column":20,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"460","location":{"end":{"column":37,"line":26},"start":{"column":21,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"461","location":{"end":{"column":54,"line":51},"start":{"column":30,"line":51}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"462","location":{"end":{"column":53,"line":51},"start":{"column":48,"line":51}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"}],"source":"import React, { useState, } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst ErrorModal = props => {\r\n    // Prop: Error; string\r\n\r\n    const [openState, setOpenState] = useState(true)\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        modal: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            marginTop: '-20vh',\r\n        },\r\n        content: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            width: '70%',\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Modal\r\n            className={classes.modal}\r\n            aria-labelledby=\"error modal\"\r\n            aria-describedby=\"something went wrong\"\r\n            open={openState}\r\n        >\r\n            <div className={classes.content}>\r\n                <h2 id=\"simple-modal-title\">\r\n                    Uh oh, something went wrong D:\r\n                </h2>\r\n                <p id=\"simple-modal-description\">\r\n                    {props.error}\r\n                </p>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    component=\"span\"\r\n                    onClick={e => setOpenState(false)}\r\n                >\r\n                    OK\r\n                </Button>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ErrorModal;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\ui\\modals\\SuccessModal.js":{"language":"javascript","mutants":[{"id":"465","location":{"end":{"column":6,"line":29},"start":{"column":44,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"464","location":{"end":{"column":7,"line":29},"start":{"column":34,"line":11}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"463","location":{"end":{"column":2,"line":60},"start":{"column":31,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"466","location":{"end":{"column":10,"line":17},"start":{"column":16,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"467","location":{"end":{"column":28,"line":13},"start":{"column":22,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"468","location":{"end":{"column":37,"line":14},"start":{"column":29,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"469","location":{"end":{"column":33,"line":15},"start":{"column":25,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"471","location":{"end":{"column":10,"line":28},"start":{"column":18,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"470","location":{"end":{"column":31,"line":16},"start":{"column":24,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"472","location":{"end":{"column":28,"line":19},"start":{"column":22,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"473","location":{"end":{"column":36,"line":20},"start":{"column":28,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"474","location":{"end":{"column":37,"line":21},"start":{"column":29,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"475","location":{"end":{"column":33,"line":22},"start":{"column":25,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"476","location":{"end":{"column":37,"line":25},"start":{"column":21,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"478","location":{"end":{"column":48,"line":44},"start":{"column":46,"line":44}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"477","location":{"end":{"column":23,"line":37},"start":{"column":19,"line":37}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"479","location":{"end":{"column":58,"line":46},"start":{"column":32,"line":46}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"480","location":{"end":{"column":56,"line":46},"start":{"column":50,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\r\nimport { Link, BrowserRouter } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst SuccessModal = props => {\r\n    // Optional Prop: redirect; string\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        modal: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            marginTop: '-20vh',\r\n        },\r\n        content: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Modal\r\n            className={classes.modal}\r\n            aria-labelledby=\"success modal\"\r\n            aria-describedby=\"whatever you did succeeded!\"\r\n            open={true}\r\n        >\r\n            <div className={classes.content}>\r\n                <h2 id=\"simple-modal-title\">Success!</h2>\r\n                <BrowserRouter>\r\n                    <Link\r\n                        to={props.redirect ?\r\n                            props.redirect : ''\r\n                        }\r\n                        style={{ textDecoration: 'none' }}\r\n                    >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            component=\"span\"\r\n                        >\r\n                            OK\r\n                        </Button>\r\n                    </Link>\r\n                </BrowserRouter>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SuccessModal;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\index.js":{"language":"javascript","mutants":[{"id":"492","location":{"end":{"column":56,"line":7},"start":{"column":50,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\ui\\nav\\BackButton.js":{"language":"javascript","mutants":[{"id":"481","location":{"end":{"column":2,"line":23},"start":{"column":26,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"482","location":{"end":{"column":6,"line":14},"start":{"column":34,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"483","location":{"end":{"column":10,"line":13},"start":{"column":15,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"484","location":{"end":{"column":30,"line":10},"start":{"column":23,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"485","location":{"end":{"column":49,"line":20},"start":{"column":22,"line":20}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst BackButton = () => {\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            //width: '100vw',\r\n            position: 'fixed',\r\n            top: 10,\r\n            left: 5,\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <ArrowBackIcon\r\n            className={classes.root}\r\n            onClick={() => window.history.back()}\r\n        />\r\n    )\r\n}\r\n\r\nexport default BackButton;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\components\\ui\\nav\\MainNav.js":{"language":"javascript","mutants":[{"id":"487","location":{"end":{"column":6,"line":19},"start":{"column":34,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"486","location":{"end":{"column":2,"line":53},"start":{"column":23,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"488","location":{"end":{"column":10,"line":18},"start":{"column":15,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"489","location":{"end":{"column":27,"line":15},"start":{"column":20,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"490","location":{"end":{"column":30,"line":16},"start":{"column":23,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"491","location":{"end":{"column":14,"line":29},"start":{"column":44,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport { Link } from 'react-router-dom';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport Home from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\n\r\nconst MainNav = () => {\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            width: '100vw',\r\n            position: 'fixed',\r\n            bottom: 0\r\n        },\r\n    });\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <BottomNavigation\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n                setValue(newValue);\r\n            }}\r\n            showLabels\r\n            className={classes.root}\r\n        >\r\n            <BottomNavigationAction\r\n                component={Link}\r\n                to='/'\r\n                label=\"Home\"\r\n                icon={<Home />}\r\n            />\r\n            <BottomNavigationAction\r\n                component={Link}\r\n                to='/trickspot'\r\n                label=\"Trickspot\"\r\n                icon={<LocationOnIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                component={Link}\r\n                to='/people'\r\n                label=\"People\"\r\n                icon={<PeopleIcon />}\r\n            />\r\n        </BottomNavigation>\r\n    );\r\n}\r\n\r\nexport default MainNav"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\screens\\HomeScreen.js":{"language":"javascript","mutants":[{"id":"493","location":{"end":{"column":76,"line":15},"start":{"column":25,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"495","location":{"end":{"column":53,"line":15},"start":{"column":51,"line":15}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"494","location":{"end":{"column":42,"line":15},"start":{"column":36,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"497","location":{"end":{"column":2,"line":68},"start":{"column":26,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"496","location":{"end":{"column":75,"line":15},"start":{"column":62,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"498","location":{"end":{"column":57,"line":20},"start":{"column":52,"line":20}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"499","location":{"end":{"column":6,"line":24},"start":{"column":25,"line":22}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"500","location":{"end":{"column":6,"line":24},"start":{"column":57,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"501","location":{"end":{"column":47,"line":23},"start":{"column":42,"line":23}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"502","location":{"end":{"column":33,"line":27},"start":{"column":25,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"503","location":{"end":{"column":52,"line":37},"start":{"column":27,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"504","location":{"end":{"column":52,"line":37},"start":{"column":27,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"505","location":{"end":{"column":52,"line":37},"start":{"column":27,"line":37}},"mutatorName":"EqualityOperator","replacement":"expanded !== 'emailPanel'","status":"Killed"},{"id":"506","location":{"end":{"column":52,"line":37},"start":{"column":40,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"507","location":{"end":{"column":51,"line":38},"start":{"column":39,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"508","location":{"end":{"column":55,"line":52},"start":{"column":27,"line":52}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"509","location":{"end":{"column":55,"line":52},"start":{"column":27,"line":52}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"510","location":{"end":{"column":55,"line":52},"start":{"column":27,"line":52}},"mutatorName":"EqualityOperator","replacement":"expanded !== 'passwordPanel'","status":"Killed"},{"id":"511","location":{"end":{"column":55,"line":52},"start":{"column":40,"line":52}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"512","location":{"end":{"column":54,"line":53},"start":{"column":39,"line":53}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport axios from 'axios';\r\n\r\nimport '../styles/screens.css'\r\nimport UserCard from '../components/account/UserCard';\r\nimport UpdateEmailForm from '../components/ui/forms/UpdateEmailForm';\r\nimport UpdatePasswordForm from '../components/ui/forms/UpdatePasswordForm';\r\n\r\n// CHANGE ME IN PRODUCTION\r\nconst userDetailsMock = {username: 'zeph', avatar:'', status:'bio bio bio'}\r\n\r\n\r\nconst HomeScreen = () => {\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const togglePanel = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    return (\r\n        <div className={'screen'}>\r\n\r\n            <UserCard\r\n                requests={axios}\r\n                username={userDetailsMock.username}\r\n                avatar={userDetailsMock.avatar}\r\n                bio={userDetailsMock.bio}\r\n            />\r\n\r\n            <ExpansionPanel\r\n                expanded={expanded === 'emailPanel'}\r\n                onChange={togglePanel('emailPanel')}\r\n            >\r\n                <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"update-email\"\r\n                    id=\"update-email-header\"\r\n                >\r\n                    <Typography>Update Email</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <UpdateEmailForm />\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel\r\n                expanded={expanded === 'passwordPanel'}\r\n                onChange={togglePanel('passwordPanel')}\r\n            >\r\n                <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"update-password\"\r\n                    id=\"update-password-header\"\r\n                >\r\n                    <Typography>Update Password</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <UpdatePasswordForm />\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeScreen;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\screens\\LoginScreen.js":{"language":"javascript","mutants":[{"id":"513","location":{"end":{"column":30,"line":12},"start":{"column":23,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"515","location":{"end":{"column":34,"line":17},"start":{"column":21,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"514","location":{"end":{"column":2,"line":40},"start":{"column":27,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"516","location":{"end":{"column":40,"line":19},"start":{"column":38,"line":19}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"517","location":{"end":{"column":44,"line":28},"start":{"column":18,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"518","location":{"end":{"column":42,"line":28},"start":{"column":36,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport '../styles/screens.css';\r\nimport frontVideo from '../assets/img/front_video_3.mp4';\r\nimport slowNetwork from '../utils/browser/slowNetwork';\r\nimport LoginForm from '../components/ui/forms/LoginForm';\r\n\r\nconst axios = require('axios')\r\n\r\nconst LoginScreen = () => {\r\n\r\n  return (\r\n    <div className={'form-screen'}>\r\n      <video autoPlay muted className='video-background'>\r\n        <source src={slowNetwork() ? '' : frontVideo} type='video/mp4' />\r\n      </video>\r\n      <h1>S K 8 M 8</h1>\r\n\r\n      <LoginForm requests={axios} />\r\n\r\n      <p>No account?</p>\r\n        <Link \r\n          to='/signup'\r\n          style={{ textDecoration: 'none' }}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            component=\"span\"\r\n          >\r\n            Sign up\r\n          </Button>\r\n        </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\screens\\MapScreen.js":{"language":"javascript","mutants":[{"id":"519","location":{"end":{"column":2,"line":100},"start":{"column":25,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"520","location":{"end":{"column":6,"line":22},"start":{"column":46,"line":20}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"522","location":{"end":{"column":75,"line":25},"start":{"column":70,"line":25}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"521","location":{"end":{"column":56,"line":24},"start":{"column":52,"line":24}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"523","location":{"end":{"column":6,"line":29},"start":{"column":21,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"524","location":{"end":{"column":10,"line":29},"start":{"column":8,"line":29}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"525","location":{"end":{"column":6,"line":38},"start":{"column":37,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"526","location":{"end":{"column":10,"line":36},"start":{"column":21,"line":33}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"527","location":{"end":{"column":31,"line":37},"start":{"column":26,"line":37}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"528","location":{"end":{"column":6,"line":42},"start":{"column":39,"line":40}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"529","location":{"end":{"column":6,"line":46},"start":{"column":42,"line":44}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"530","location":{"end":{"column":46,"line":45},"start":{"column":33,"line":45}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"531","location":{"end":{"column":46,"line":45},"start":{"column":41,"line":45}},"mutatorName":"BooleanLiteral","replacement":"prev","status":"Survived"},{"id":"532","location":{"end":{"column":74,"line":78},"start":{"column":35,"line":78}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"533","location":{"end":{"column":69,"line":79},"start":{"column":37,"line":79}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"534","location":{"end":{"column":53,"line":79},"start":{"column":45,"line":79}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"535","location":{"end":{"column":67,"line":79},"start":{"column":59,"line":79}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import React, { useState, useEffect } from 'react';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport axios from 'axios';\r\n\r\nimport '../styles/screens.css'\r\nimport spinner from '../assets/img/ajax-loader.gif';\r\nimport locate from '../utils/browser/locate';\r\nimport Map from '../components/maps/LeafletMap';\r\nimport CreateMarkerForm from '../components/ui/forms/CreateMarkerForm';\r\nimport formStyles from '../styles/forms';\r\n\r\n\r\nconst MapScreen = () => {\r\n    // Marker format TBD\r\n    const [location, setLocation] = useState([\r\n        null, null\r\n    ]);\r\n    const [radius, setRadius] = useState(10);\r\n    const [isLoading, setLoadingStatus] = useState(true);\r\n    const [showCreateMarkerForm, setShowCreateMarkerForm] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getLocation();\r\n    }, []);\r\n\r\n    const getLocation = async () => {\r\n        const { latitude, longitude } = await locate()\r\n        setLocation([\r\n            latitude,\r\n            longitude\r\n        ]);\r\n        setLoadingStatus(false);\r\n    }\r\n\r\n    const handleRadiusChange = val => {\r\n        setRadius(val)\r\n    }\r\n\r\n    const toggleCreateMarkerForm = () => {\r\n        setShowCreateMarkerForm(prev => !prev);\r\n    }\r\n\r\n    const formClasses = formStyles()\r\n    return (\r\n        <div className='screen'>\r\n            {isLoading ?\r\n                <img src={spinner} alt='loading' /> :\r\n                <Map \r\n                    location={location}\r\n                    radius={radius}\r\n                    requests={axios}\r\n                />\r\n            }\r\n\r\n            <div className='map-options'>\r\n                <FormControlLabel\r\n                    className={formClasses.standardSpacing}\r\n                    control={\r\n                        <Button\r\n                            onClick={toggleCreateMarkerForm}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            component=\"span\"\r\n                        >\r\n                            Create a Marker \r\n                        </Button>\r\n                    }\r\n                />\r\n                <FormControl className={formClasses.standardSpacing}>\r\n                    <InputLabel htmlFor=\"radius\">Radius</InputLabel>\r\n                    <NativeSelect\r\n                        value={radius}\r\n                        onChange={e => handleRadiusChange(e.target.value)}\r\n                        inputProps={{ name: 'radius', id: 'radius' }}\r\n                    >\r\n                        <option value={0}>0</option>\r\n                        <option value={5}>5</option>\r\n                        <option value={10}>10</option>\r\n                        <option value={25}>25</option>\r\n                        <option value={50}>50</option>\r\n                        <option value={100}>100</option>\r\n                    </NativeSelect>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <SwipeableDrawer\r\n                open={showCreateMarkerForm}\r\n                onClose={toggleCreateMarkerForm}\r\n                onOpen={toggleCreateMarkerForm}\r\n            >\r\n                <CreateMarkerForm location={location} requests={axios} />\r\n            </SwipeableDrawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapScreen;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\screens\\PeopleScreen.js":{"language":"javascript","mutants":[{"id":"536","location":{"end":{"column":2,"line":38},"start":{"column":28,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"537","location":{"end":{"column":6,"line":10},"start":{"column":46,"line":8}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"538","location":{"end":{"column":6,"line":18},"start":{"column":37,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"539","location":{"end":{"column":10,"line":17},"start":{"column":21,"line":14}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"540","location":{"end":{"column":6,"line":22},"start":{"column":21,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"541","location":{"end":{"column":10,"line":22},"start":{"column":8,"line":22}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"542","location":{"end":{"column":6,"line":31},"start":{"column":21,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"543","location":{"end":{"column":57,"line":25},"start":{"column":13,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"544","location":{"end":{"column":57,"line":25},"start":{"column":13,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"545","location":{"end":{"column":57,"line":25},"start":{"column":13,"line":25}},"mutatorName":"LogicalOperator","replacement":"location[0] !== null || location[1] !== null","status":"Survived"},{"id":"546","location":{"end":{"column":33,"line":25},"start":{"column":13,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"547","location":{"end":{"column":33,"line":25},"start":{"column":13,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"548","location":{"end":{"column":33,"line":25},"start":{"column":13,"line":25}},"mutatorName":"EqualityOperator","replacement":"location[0] === null","status":"Survived"},{"id":"550","location":{"end":{"column":57,"line":25},"start":{"column":37,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"549","location":{"end":{"column":57,"line":25},"start":{"column":37,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"551","location":{"end":{"column":57,"line":25},"start":{"column":37,"line":25}},"mutatorName":"EqualityOperator","replacement":"location[1] === null","status":"Survived"},{"id":"552","location":{"end":{"column":10,"line":30},"start":{"column":59,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"554","location":{"end":{"column":18,"line":31},"start":{"column":8,"line":31}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"553","location":{"end":{"column":75,"line":27},"start":{"column":17,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport locate from '../utils/browser/locate';\r\nimport PeopleListing from '../components/people/PeopleListing';\r\n\r\nconst PeopleScreen = () => {\r\n    const [location, setLocation] = useState([\r\n        null, null\r\n    ]);\r\n\r\n    const getLocation = async () => {\r\n        const { latitude, longitude } = await locate()\r\n        setLocation([\r\n            latitude,\r\n            longitude\r\n        ]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLocation();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (location[0] !== null && location[1] !== null) {\r\n            axios.post(\r\n                `${process.env.REACT_APP_ENDPOINT}/account/updatelocation`,\r\n                location\r\n            )\r\n        }\r\n    }, [location])\r\n    \r\n    return (\r\n        <div className='screen'>\r\n            <PeopleListing requests={axios} location={location} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PeopleScreen;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\serviceWorker.js":{"language":"javascript","mutants":[{"id":"559","location":{"end":{"column":6,"line":20},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"560","location":{"end":{"column":6,"line":20},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"561","location":{"end":{"column":6,"line":20},"start":{"column":3,"line":14}},"mutatorName":"LogicalOperator","replacement":"(window.location.hostname === 'localhost' || // [::1] is the IPv6 localhost address.\nwindow.location.hostname === '[::1]') && // 127.0.0.1/8 is considered localhost for IPv4.\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)","status":"Survived"},{"id":"562","location":{"end":{"column":41,"line":16},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"563","location":{"end":{"column":41,"line":16},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"564","location":{"end":{"column":41,"line":16},"start":{"column":3,"line":14}},"mutatorName":"LogicalOperator","replacement":"window.location.hostname === 'localhost' && // [::1] is the IPv6 localhost address.\nwindow.location.hostname === '[::1]'","status":"Survived"},{"id":"565","location":{"end":{"column":43,"line":14},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"566","location":{"end":{"column":43,"line":14},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"567","location":{"end":{"column":43,"line":14},"start":{"column":3,"line":14}},"mutatorName":"EqualityOperator","replacement":"window.location.hostname !== 'localhost'","status":"Survived"},{"id":"568","location":{"end":{"column":43,"line":14},"start":{"column":32,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"569","location":{"end":{"column":41,"line":16},"start":{"column":5,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"570","location":{"end":{"column":41,"line":16},"start":{"column":5,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"572","location":{"end":{"column":41,"line":16},"start":{"column":34,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"571","location":{"end":{"column":41,"line":16},"start":{"column":5,"line":16}},"mutatorName":"EqualityOperator","replacement":"// [::1] is the IPv6 localhost address.\nwindow.location.hostname !== '[::1]'","status":"Survived"},{"id":"573","location":{"end":{"column":2,"line":55},"start":{"column":34,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"574","location":{"end":{"column":76,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"575","location":{"end":{"column":76,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"576","location":{"end":{"column":76,"line":24},"start":{"column":7,"line":24}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'production' || 'serviceWorker' in navigator","status":"Survived"},{"id":"577","location":{"end":{"column":44,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"578","location":{"end":{"column":44,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"580","location":{"end":{"column":44,"line":24},"start":{"column":32,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"579","location":{"end":{"column":44,"line":24},"start":{"column":7,"line":24}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'production'","status":"Survived"},{"id":"581","location":{"end":{"column":63,"line":24},"start":{"column":48,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"582","location":{"end":{"column":4,"line":54},"start":{"column":78,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"583","location":{"end":{"column":52,"line":27},"start":{"column":9,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"584","location":{"end":{"column":52,"line":27},"start":{"column":9,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"585","location":{"end":{"column":52,"line":27},"start":{"column":9,"line":27}},"mutatorName":"EqualityOperator","replacement":"publicUrl.origin === window.location.origin","status":"Survived"},{"id":"587","location":{"end":{"column":35,"line":34},"start":{"column":29,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"586","location":{"end":{"column":6,"line":32},"start":{"column":54,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"588","location":{"end":{"column":6,"line":53},"start":{"column":43,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"590","location":{"end":{"column":22,"line":37},"start":{"column":11,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"589","location":{"end":{"column":66,"line":35},"start":{"column":21,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"591","location":{"end":{"column":22,"line":37},"start":{"column":11,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"592","location":{"end":{"column":8,"line":49},"start":{"column":24,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"593","location":{"end":{"column":10,"line":48},"start":{"column":50,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"594","location":{"end":{"column":68,"line":46},"start":{"column":13,"line":45}},"mutatorName":"ArithmeticOperator","replacement":"'This web app is being served cache-first by a service ' - 'worker. To learn more, visit https://bit.ly/CRA-PWA'","status":"Survived"},{"id":"595","location":{"end":{"column":69,"line":45},"start":{"column":13,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"596","location":{"end":{"column":68,"line":46},"start":{"column":15,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"597","location":{"end":{"column":8,"line":52},"start":{"column":14,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"599","location":{"end":{"column":6,"line":95},"start":{"column":27,"line":60}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"598","location":{"end":{"column":2,"line":99},"start":{"column":41,"line":57}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"600","location":{"end":{"column":8,"line":94},"start":{"column":42,"line":61}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"601","location":{"end":{"column":37,"line":63},"start":{"column":13,"line":63}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"602","location":{"end":{"column":37,"line":63},"start":{"column":13,"line":63}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"603","location":{"end":{"column":37,"line":63},"start":{"column":13,"line":63}},"mutatorName":"EqualityOperator","replacement":"installingWorker != null","status":"Survived"},{"id":"604","location":{"end":{"column":10,"line":65},"start":{"column":39,"line":63}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"605","location":{"end":{"column":10,"line":93},"start":{"column":48,"line":66}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"606","location":{"end":{"column":53,"line":67},"start":{"column":15,"line":67}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"608","location":{"end":{"column":53,"line":67},"start":{"column":15,"line":67}},"mutatorName":"EqualityOperator","replacement":"installingWorker.state !== 'installed'","status":"Survived"},{"id":"607","location":{"end":{"column":53,"line":67},"start":{"column":15,"line":67}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"609","location":{"end":{"column":53,"line":67},"start":{"column":42,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"611","location":{"end":{"column":51,"line":68},"start":{"column":17,"line":68}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"610","location":{"end":{"column":12,"line":92},"start":{"column":55,"line":67}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"612","location":{"end":{"column":51,"line":68},"start":{"column":17,"line":68}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"613","location":{"end":{"column":14,"line":81},"start":{"column":53,"line":68}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"614","location":{"end":{"column":79,"line":74},"start":{"column":17,"line":73}},"mutatorName":"ArithmeticOperator","replacement":"'New content is available and will be used when all ' - 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'","status":"Survived"},{"id":"615","location":{"end":{"column":70,"line":73},"start":{"column":17,"line":73}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"616","location":{"end":{"column":79,"line":74},"start":{"column":19,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"617","location":{"end":{"column":44,"line":78},"start":{"column":19,"line":78}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"618","location":{"end":{"column":44,"line":78},"start":{"column":19,"line":78}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"619","location":{"end":{"column":44,"line":78},"start":{"column":19,"line":78}},"mutatorName":"LogicalOperator","replacement":"config || config.onUpdate","status":"Survived"},{"id":"620","location":{"end":{"column":16,"line":80},"start":{"column":46,"line":78}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"622","location":{"end":{"column":63,"line":85},"start":{"column":27,"line":85}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"621","location":{"end":{"column":14,"line":91},"start":{"column":20,"line":81}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"623","location":{"end":{"column":45,"line":88},"start":{"column":19,"line":88}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"624","location":{"end":{"column":45,"line":88},"start":{"column":19,"line":88}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"625","location":{"end":{"column":45,"line":88},"start":{"column":19,"line":88}},"mutatorName":"LogicalOperator","replacement":"config || config.onSuccess","status":"Survived"},{"id":"626","location":{"end":{"column":16,"line":90},"start":{"column":47,"line":88}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"627","location":{"end":{"column":6,"line":98},"start":{"column":21,"line":96}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"628","location":{"end":{"column":64,"line":97},"start":{"column":21,"line":97}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"629","location":{"end":{"column":2,"line":127},"start":{"column":49,"line":101}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"630","location":{"end":{"column":6,"line":121},"start":{"column":23,"line":104}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"631","location":{"end":{"column":62,"line":106},"start":{"column":48,"line":106}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"632","location":{"end":{"column":74,"line":109},"start":{"column":9,"line":108}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"633","location":{"end":{"column":74,"line":109},"start":{"column":9,"line":108}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"634","location":{"end":{"column":74,"line":109},"start":{"column":9,"line":108}},"mutatorName":"LogicalOperator","replacement":"response.status === 404 && contentType != null && contentType.indexOf('javascript') === -1","status":"Survived"},{"id":"635","location":{"end":{"column":32,"line":108},"start":{"column":9,"line":108}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"636","location":{"end":{"column":32,"line":108},"start":{"column":9,"line":108}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"637","location":{"end":{"column":32,"line":108},"start":{"column":9,"line":108}},"mutatorName":"EqualityOperator","replacement":"response.status !== 404","status":"Survived"},{"id":"638","location":{"end":{"column":73,"line":109},"start":{"column":10,"line":109}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"640","location":{"end":{"column":73,"line":109},"start":{"column":10,"line":109}},"mutatorName":"LogicalOperator","replacement":"contentType != null || contentType.indexOf('javascript') === -1","status":"Survived"},{"id":"639","location":{"end":{"column":73,"line":109},"start":{"column":10,"line":109}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"641","location":{"end":{"column":29,"line":109},"start":{"column":10,"line":109}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"642","location":{"end":{"column":29,"line":109},"start":{"column":10,"line":109}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"643","location":{"end":{"column":29,"line":109},"start":{"column":10,"line":109}},"mutatorName":"EqualityOperator","replacement":"contentType == null","status":"Survived"},{"id":"644","location":{"end":{"column":73,"line":109},"start":{"column":33,"line":109}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"645","location":{"end":{"column":73,"line":109},"start":{"column":33,"line":109}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"646","location":{"end":{"column":73,"line":109},"start":{"column":33,"line":109}},"mutatorName":"EqualityOperator","replacement":"contentType.indexOf('javascript') !== -1","status":"Survived"},{"id":"647","location":{"end":{"column":65,"line":109},"start":{"column":53,"line":109}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"648","location":{"end":{"column":73,"line":109},"start":{"column":71,"line":109}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"649","location":{"end":{"column":8,"line":117},"start":{"column":9,"line":110}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"650","location":{"end":{"column":10,"line":116},"start":{"column":60,"line":112}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"651","location":{"end":{"column":12,"line":115},"start":{"column":48,"line":113}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"653","location":{"end":{"column":6,"line":126},"start":{"column":18,"line":122}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"652","location":{"end":{"column":8,"line":120},"start":{"column":14,"line":117}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"654","location":{"end":{"column":72,"line":124},"start":{"column":9,"line":124}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"655","location":{"end":{"column":2,"line":135},"start":{"column":30,"line":129}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"656","location":{"end":{"column":35,"line":130},"start":{"column":7,"line":130}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"657","location":{"end":{"column":35,"line":130},"start":{"column":7,"line":130}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"658","location":{"end":{"column":22,"line":130},"start":{"column":7,"line":130}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"660","location":{"end":{"column":6,"line":133},"start":{"column":56,"line":131}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"659","location":{"end":{"column":4,"line":134},"start":{"column":37,"line":130}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\screens\\SignupScreen.js":{"language":"javascript","mutants":[{"id":"555","location":{"end":{"column":30,"line":7},"start":{"column":23,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"556","location":{"end":{"column":2,"line":19},"start":{"column":28,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"557","location":{"end":{"column":38,"line":12},"start":{"column":25,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"558","location":{"end":{"column":44,"line":16},"start":{"column":25,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"import React from 'react';\r\n\r\nimport '../styles/screens.css';\r\nimport BackButton from '../components/ui/nav/BackButton';\r\nimport SignupForm from '../components/ui/forms/SignupForm';\r\n\r\nconst axios = require('axios');\r\n\r\nconst SignupScreen = () => {\r\n\r\n    return (\r\n        <div className={'form-screen'}>\r\n            <BackButton />\r\n            <h1>S K 8 M 8</h1>\r\n            <SignupForm requests={axios} />\r\n            <div style={{marginBottom: 100}}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignupScreen"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\setupTests.js":{"language":"javascript","mutants":[{"id":"661","location":{"end":{"column":37,"line":4},"start":{"column":11,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { configure } from 'enzyme';\r\nimport Adapter from 'enzyme-adapter-react-16';\r\n\r\nconfigure({ adapter: new Adapter() });"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\styles\\forms.js":{"language":"javascript","mutants":[{"id":"663","location":{"end":{"column":2,"line":48},"start":{"column":41,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"662","location":{"end":{"column":3,"line":48},"start":{"column":31,"line":3}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"664","location":{"end":{"column":6,"line":11},"start":{"column":11,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"666","location":{"end":{"column":32,"line":6},"start":{"column":24,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"674","location":{"end":{"column":32,"line":18},"start":{"column":24,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"672","location":{"end":{"column":6,"line":20},"start":{"column":20,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"665","location":{"end":{"column":24,"line":5},"start":{"column":18,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"670","location":{"end":{"column":24,"line":13},"start":{"column":18,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"673","location":{"end":{"column":24,"line":17},"start":{"column":18,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"667","location":{"end":{"column":33,"line":7},"start":{"column":25,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"668","location":{"end":{"column":29,"line":8},"start":{"column":21,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"671","location":{"end":{"column":40,"line":14},"start":{"column":25,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"669","location":{"end":{"column":6,"line":15},"start":{"column":17,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"675","location":{"end":{"column":32,"line":19},"start":{"column":25,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"676","location":{"end":{"column":6,"line":24},"start":{"column":17,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"677","location":{"end":{"column":6,"line":27},"start":{"column":13,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"678","location":{"end":{"column":6,"line":31},"start":{"column":22,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"679","location":{"end":{"column":26,"line":29},"start":{"column":20,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"680","location":{"end":{"column":6,"line":34},"start":{"column":16,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"685","location":{"end":{"column":23,"line":40},"start":{"column":16,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"686","location":{"end":{"column":22,"line":41},"start":{"column":16,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"683","location":{"end":{"column":6,"line":47},"start":{"column":25,"line":38}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"684","location":{"end":{"column":35,"line":39},"start":{"column":26,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"687","location":{"end":{"column":23,"line":42},"start":{"column":17,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"681","location":{"end":{"column":27,"line":33},"start":{"column":21,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"682","location":{"end":{"column":6,"line":37},"start":{"column":22,"line":35}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst formStyles = makeStyles(theme => ({\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        maxWidth: 225,\r\n        padding: 20,\r\n    },\r\n    inlineForm: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    textFieldForm: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'right'\r\n    },\r\n    inputField: {\r\n        margin: theme.spacing(2),\r\n        width: 225,\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    inlineFormSubmit:{\r\n        marginTop: 'auto',\r\n        maxHeight: 35\r\n    },\r\n    pullRight: {\r\n        marginLeft: 'auto',\r\n    },\r\n    standardSpacing: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    embeddedFormHeader: {\r\n        backgroundColor: '#30363a',\r\n        color: 'white',\r\n        width: '100%',\r\n        height: 'auto',\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        letterSpacing: 1,\r\n        padding: 10,\r\n    }\r\n}));\r\n\r\nexport default formStyles"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\styles\\themes\\standard.js":{"language":"javascript","mutants":[{"id":"688","location":{"end":{"column":2,"line":12},"start":{"column":33,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"689","location":{"end":{"column":4,"line":10},"start":{"column":12,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\n\r\nconst standard = createMuiTheme({\r\n  palette: {\r\n    primary: blue,\r\n    secondary: green,\r\n  },\r\n  //spacing: factor => `${0.25 * factor}rem`,\r\n});\r\n\r\n\r\nexport default standard"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\utils\\browser\\getCookie.js":{"language":"javascript","mutants":[{"id":"693","location":{"end":{"column":2,"line":15},"start":{"column":30,"line":1}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"694","location":{"end":{"column":27,"line":2},"start":{"column":16,"line":2}},"mutatorName":"ArithmeticOperator","replacement":"cname - \"=\"","status":"Killed"},{"id":"695","location":{"end":{"column":27,"line":2},"start":{"column":24,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"696","location":{"end":{"column":37,"line":4},"start":{"column":34,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"697","location":{"end":{"column":34,"line":5},"start":{"column":21,"line":5}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"698","location":{"end":{"column":34,"line":5},"start":{"column":21,"line":5}},"mutatorName":"EqualityOperator","replacement":"i <= ca.length","status":"Killed"},{"id":"699","location":{"end":{"column":34,"line":5},"start":{"column":21,"line":5}},"mutatorName":"EqualityOperator","replacement":"i >= ca.length","status":"Killed"},{"id":"702","location":{"end":{"column":35,"line":7},"start":{"column":16,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"700","location":{"end":{"column":39,"line":5},"start":{"column":36,"line":5}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Killed"},{"id":"701","location":{"end":{"column":6,"line":13},"start":{"column":41,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"705","location":{"end":{"column":10,"line":9},"start":{"column":37,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"706","location":{"end":{"column":34,"line":10},"start":{"column":13,"line":10}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"707","location":{"end":{"column":34,"line":10},"start":{"column":13,"line":10}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"708","location":{"end":{"column":34,"line":10},"start":{"column":13,"line":10}},"mutatorName":"EqualityOperator","replacement":"c.indexOf(name) !== 0","status":"Killed"},{"id":"709","location":{"end":{"column":10,"line":12},"start":{"column":36,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"710","location":{"end":{"column":14,"line":14},"start":{"column":12,"line":14}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"704","location":{"end":{"column":35,"line":7},"start":{"column":32,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"703","location":{"end":{"column":35,"line":7},"start":{"column":16,"line":7}},"mutatorName":"EqualityOperator","replacement":"c.charAt(0) !== ' '","status":"Timeout"}],"source":"const getCookie = (cname) => {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) === ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) === 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nexport default getCookie"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\utils\\__mocks__\\mockAxios.js":{"language":"javascript","mutants":[{"id":"691","location":{"end":{"column":53,"line":2},"start":{"column":18,"line":2}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"692","location":{"end":{"column":52,"line":2},"start":{"column":40,"line":2}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"690","location":{"end":{"column":2,"line":3},"start":{"column":16,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"export default {\r\n    get: jest.fn(() => Promise.resolve({ data: {} }))\r\n};"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\utils\\browser\\locate.js":{"language":"javascript","mutants":[{"id":"711","location":{"end":{"column":2,"line":5},"start":{"column":35,"line":1}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"712","location":{"end":{"column":6,"line":4},"start":{"column":45,"line":2}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"713","location":{"end":{"column":2,"line":21},"start":{"column":28,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"714","location":{"end":{"column":30,"line":10},"start":{"column":9,"line":10}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"715","location":{"end":{"column":30,"line":10},"start":{"column":9,"line":10}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"719","location":{"end":{"column":35,"line":20},"start":{"column":12,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"716","location":{"end":{"column":6,"line":18},"start":{"column":32,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"717","location":{"end":{"column":10,"line":15},"start":{"column":13,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"718","location":{"end":{"column":10,"line":17},"start":{"column":21,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"const _getCurrentPosition = () => {\r\n    return new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject);\r\n    });\r\n}\r\n\r\nconst locate = async () => {\r\n    let latitude = null,\r\n        longitude = null;\r\n    if (navigator.geolocation) {\r\n        try {\r\n            const myPosition = await _getCurrentPosition();\r\n            latitude = myPosition.coords.latitude;\r\n            longitude = myPosition.coords.longitude;\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    //console.log(latitude, longitude)\r\n    return { latitude, longitude };\r\n}\r\n\r\nexport default locate"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\utils\\fetch\\queryUrlBuilder.js":{"language":"javascript","mutants":[{"id":"728","location":{"end":{"column":2,"line":6},"start":{"column":67,"line":2}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"729","location":{"end":{"column":71,"line":4},"start":{"column":69,"line":4}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"730","location":{"end":{"column":64,"line":5},"start":{"column":12,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"\r\nconst queryUrlBuilder = (endpoint, controller, action, params) => {\r\n    let queryParams\r\n    params ? queryParams = new URLSearchParams(params).toString() : '';\r\n    return `${endpoint}/${controller}/${action}/${queryParams}`\r\n};\r\n\r\nexport default queryUrlBuilder;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\utils\\hooks\\useLocalStorage.js":{"language":"javascript","mutants":[{"id":"731","location":{"end":{"column":2,"line":15},"start":{"column":44,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"732","location":{"end":{"column":6,"line":12},"start":{"column":27,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"733","location":{"end":{"column":15,"line":12},"start":{"column":8,"line":12}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"734","location":{"end":{"column":29,"line":14},"start":{"column":12,"line":14}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import React from 'react';\r\n\r\nconst useLocalStorage = localStorageKey => {\r\n    // param: what we're calling the data; string\r\n\r\n    const [value, setValue] = React.useState(\r\n        localStorage.getItem(localStorageKey)\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        localStorage.setItem(localStorageKey, value);\r\n    }, [value]);\r\n\r\n    return [value, setValue];\r\n};\r\n\r\nexport default useLocalStorage;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\utils\\hooks\\useSessionStorage.js":{"language":"javascript","mutants":[{"id":"735","location":{"end":{"column":2,"line":15},"start":{"column":48,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"736","location":{"end":{"column":6,"line":12},"start":{"column":27,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"737","location":{"end":{"column":15,"line":12},"start":{"column":8,"line":12}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"738","location":{"end":{"column":29,"line":14},"start":{"column":12,"line":14}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import React from 'react';\r\n\r\nconst useSessionStorage = sessionStorageKey => {\r\n    // param: what we're calling the data; string\r\n\r\n    const [value, setValue] = React.useState(\r\n        sessionStorage.getItem(sessionStorageKey)\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        sessionStorage.setItem(sessionStorageKey, value);\r\n    }, [value]);\r\n\r\n    return [value, setValue];\r\n};\r\n\r\nexport default useSessionStorage;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\utils\\browser\\slowNetwork.js":{"language":"javascript","mutants":[{"id":"721","location":{"end":{"column":34,"line":3},"start":{"column":9,"line":3}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"722","location":{"end":{"column":34,"line":3},"start":{"column":9,"line":3}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"720","location":{"end":{"column":2,"line":7},"start":{"column":27,"line":1}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"723","location":{"end":{"column":6,"line":5},"start":{"column":36,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"724","location":{"end":{"column":49,"line":4},"start":{"column":16,"line":4}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"725","location":{"end":{"column":49,"line":4},"start":{"column":16,"line":4}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"726","location":{"end":{"column":49,"line":4},"start":{"column":16,"line":4}},"mutatorName":"EqualityOperator","replacement":"NetworkInformation.downlink <= 500","status":"Survived"},{"id":"727","location":{"end":{"column":49,"line":4},"start":{"column":16,"line":4}},"mutatorName":"EqualityOperator","replacement":"NetworkInformation.downlink >= 500","status":"Killed"}],"source":"const slowNetwork = () => {\r\n    let slow = null\r\n    if (window.NetworkInformation) {\r\n        slow = NetworkInformation.downlink < 500\r\n    }\r\n    return slow\r\n}\r\n\r\nexport default slowNetwork;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\utils\\map\\fetchMarkerDetails.js":{"language":"javascript","mutants":[{"id":"740","location":{"end":{"column":2,"line":8},"start":{"column":46,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"// DEV ONLY\r\nimport markerDetailJson from '../dummyData/marker_detail.json';\r\n\r\nconst fetchMarkerDetails = async markerId => {\r\n    let markerDetails = await markerDetailJson.data\r\n\r\n    return markerDetails\r\n}\r\n\r\nexport default fetchMarkerDetails;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\utils\\map\\fetchLocationTypes.js":{"language":"javascript","mutants":[{"id":"739","location":{"end":{"column":2,"line":8},"start":{"column":40,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"// DEV ONLY\r\nimport locationTypesJson from '../dummyData/location_types.json';\r\n\r\nconst fetchLocationTypes = async () => {\r\n    let locationTypes = await locationTypesJson.data;\r\n\r\n    return locationTypes\r\n}\r\n\r\nexport default fetchLocationTypes;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\utils\\map\\fetchMarkers.js":{"language":"javascript","mutants":[{"id":"741","location":{"end":{"column":2,"line":20},"start":{"column":50,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"// DEV ONLY\r\nimport markerJson from '../dummyData/100_markers.json';\r\n\r\nconst fetchMarkers = async (location, radius) => {\r\n    // Need to send location and radius\r\n    //console.log('fetchMarkers', location, markers, radius)\r\n    /*const data = await fetch(\r\n        '',\r\n        latitude,\r\n        longitude,\r\n        radius,\r\n    );\r\n    //const markers = await data.json(); */\r\n    let markerData = await markerJson\r\n    console.log(location, radius)\r\n    //console.log(markerData[4].coords)\r\n\r\n    // Returns: Object\r\n    return markerData\r\n}\r\n\r\nexport default fetchMarkers;"},"D:\\Coding\\Projects\\sk8m8\\sk8m8\\src\\utils\\map\\setMarkerIcons.js":{"language":"javascript","mutants":[{"id":"743","location":{"end":{"column":6,"line":9},"start":{"column":30,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"742","location":{"end":{"column":2,"line":11},"start":{"column":30,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import L from 'leaflet'\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\n\r\nconst setMarkerIcons = () => {\r\n    let DefaultIcon = L.icon({\r\n        iconUrl: icon,\r\n        shadowUrl: iconShadow,\r\n    });\r\n    L.Marker.prototype.options.icon = DefaultIcon;\r\n}\r\n\r\nexport default setMarkerIcons;"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}};